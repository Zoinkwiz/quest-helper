/*
 * Copyright (c) 2020, Zoinkwiz
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.questhelper.collections;

import com.google.common.collect.ImmutableList;
import lombok.AllArgsConstructor;
import lombok.Getter;
import net.runelite.api.gameval.ItemID;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 * These are useful item collections.
 * These lists are ORDERED.
 * Order items from highest tier to lowest tier,
 * or highest dose to lowest dose, etc.
 * As long as the list is consistent in how it is ordered.
 */

 class SharedCollections {
	 static final ImmutableList<Integer> slayer_helmets = ImmutableList.of(
		 ItemID.SLAYER_HELM,
		 ItemID.SLAYER_HELM_I,
		 ItemID.SW_SLAYER_HELM_I,
		 ItemID.PVPA_SLAYER_HELM_I,
		 ItemID.SLAYER_HELM_BLACK,
		 ItemID.SLAYER_HELM_I_BLACK,
		 ItemID.SW_SLAYER_HELM_I_BLACK,
		 ItemID.PVPA_SLAYER_HELM_I_BLACK,
		 ItemID.SLAYER_HELM_GREEN,
		 ItemID.SLAYER_HELM_I_GREEN,
		 ItemID.SW_SLAYER_HELM_I_GREEN,
		 ItemID.PVPA_SLAYER_HELM_I_GREEN,
		 ItemID.SLAYER_HELM_RED,
		 ItemID.SLAYER_HELM_I_RED,
		 ItemID.SW_SLAYER_HELM_I_RED,
		 ItemID.PVPA_SLAYER_HELM_I_RED,
		 ItemID.SLAYER_HELM_PURPLE,
		 ItemID.SLAYER_HELM_I_PURPLE,
		 ItemID.SW_SLAYER_HELM_I_PURPLE,
		 ItemID.PVPA_SLAYER_HELM_I_PURPLE,
		 ItemID.SLAYER_HELM_TURQUOISE,
		 ItemID.SLAYER_HELM_I_TURQUOISE,
		 ItemID.SW_SLAYER_HELM_I_TURQUOISE,
		 ItemID.PVPA_SLAYER_HELM_I_TURQUOISE,
		 ItemID.SLAYER_HELM_HYDRA,
		 ItemID.SLAYER_HELM_I_HYDRA,
		 ItemID.SW_SLAYER_HELM_I_HYDRA,
		 ItemID.PVPA_SLAYER_HELM_I_HYDRA,
		 ItemID.SLAYER_HELM_TWISTED,
		 ItemID.SLAYER_HELM_I_TWISTED,
		 ItemID.SW_SLAYER_HELM_I_TWISTED,
		 ItemID.PVPA_SLAYER_HELM_I_TWISTED,
		 ItemID.SLAYER_HELM_ZUK,
		 ItemID.SLAYER_HELM_I_ZUK,
		 ItemID.SW_SLAYER_HELM_I_ZUK,
		 ItemID.PVPA_SLAYER_HELM_I_ZUK,
		 ItemID.SLAYER_HELM_VERZIK,
		 ItemID.SLAYER_HELM_I_VERZIK,
		 ItemID.SW_SLAYER_HELM_I_VERZIK,
		 ItemID.PVPA_SLAYER_HELM_I_VERZIK,
		 ItemID.SLAYER_HELM_JAD,
		 ItemID.SLAYER_HELM_I_JAD,
		 ItemID.SW_SLAYER_HELM_I_JAD,
		 ItemID.PVPA_SLAYER_HELM_I_JAD
	 );
 }

@AllArgsConstructor
@Getter
public enum ItemCollections
{
	// Tools
	AXES("Axe", ImmutableList.of(
		ItemID.CRYSTAL_AXE,
		ItemID.CRYSTAL_AXE_2H,
		ItemID._3A_AXE,
		ItemID.LEAGUE_TRAILBLAZER_AXE,
		ItemID.TRAILBLAZER_AXE,
		ItemID.INFERNAL_AXE,
		ItemID.TRAILBLAZER_AXE_EMPTY,
		ItemID.INFERNAL_AXE_EMPTY,
		ItemID.TRAILBLAZER_AXE_NO_INFERNAL,
		ItemID.DRAGON_AXE,
		ItemID.DRAGON_AXE_2H,
		ItemID.RUNE_AXE,
		ItemID.RUNE_AXE_2H,
		ItemID.TRAIL_GILDED_AXE,
		ItemID.ADAMANT_AXE,
		ItemID.ADAMANT_AXE_2H,
		ItemID.MITHRIL_AXE,
		ItemID.MITHRIL_AXE_2H,
		ItemID.BLACK_AXE,
		ItemID.BLACK_AXE_2H,
		ItemID.STEEL_AXE,
		ItemID.STEEL_AXE_2H,
		ItemID.IRON_AXE,
		ItemID.IRON_AXE_2H,
		ItemID.BRONZE_AXE,
		ItemID.BRONZE_AXE_2H
	)),

	PICKAXES("Pickaxe", ImmutableList.of(
		ItemID.TRAILBLAZER_PICKAXE,
		ItemID.LEAGUE_TRAILBLAZER_PICKAXE,
		ItemID.CRYSTAL_PICKAXE,
		ItemID.CRYSTAL_PICKAXE_INACTIVE,
		ItemID._3A_PICKAXE,
		ItemID.INFERNAL_PICKAXE,
		ItemID.TRAILBLAZER_PICKAXE_NO_INFERNAL,
		ItemID.DRAGON_PICKAXE_PRETTY,
		ItemID.ZALCANO_PICKAXE,
		ItemID.DRAGON_PICKAXE,
		ItemID.RUNE_PICKAXE,
		ItemID.TRAIL_GILDED_PICKAXE,
		ItemID.ADAMANT_PICKAXE,
		ItemID.MITHRIL_PICKAXE,
		ItemID.BLACK_PICKAXE,
		ItemID.STEEL_PICKAXE,
		ItemID.IRON_PICKAXE,
		ItemID.BRONZE_PICKAXE
	)),

	HARPOONS("Harpoon", ImmutableList.of(
		ItemID.TRAILBLAZER_HARPOON,
		ItemID.LEAGUE_TRAILBLAZER_HARPOON,
		ItemID.INFERNAL_HARPOON,
		ItemID.DRAGON_HARPOON,
		ItemID.HUNTING_BARBED_HARPOON,
		ItemID.HARPOON
	)),

	MACHETE("Machete", ImmutableList.of(
		ItemID.MACHETTE_REDTOPAZ,
		ItemID.MACHETTE_JADE,
		ItemID.MACHETTE_OPAL,
		ItemID.MACHETTE
	)),

	HAMMER("Hammer", ImmutableList.of(
		ItemID.HAMMER,
		ItemID.IMCANDO_HAMMER,
		ItemID.IMCANDO_HAMMER_OFFHAND
	)),

	SAW("Saw", ImmutableList.of(
		ItemID.POH_SAW,
		ItemID.WEARABLE_SAW,
		ItemID.EYEGLO_CRYSTAL_SAW
	)),

	NAILS("Nails", ImmutableList.of(
		ItemID.NAILS,
		ItemID.NAILS_IRON,
		ItemID.NAILS_BRONZE,
		ItemID.NAILS_BLACK,
		ItemID.NAILS_MITHRIL,
		ItemID.NAILS_ADAMANT,
		ItemID.NAILS_RUNE
	)),

	BOWS("Bows", ImmutableList.of(
		ItemID.MAGIC_SHORTBOW,
		ItemID.MAGIC_SHORTBOW_I,
		ItemID.DARKBOW,
		ItemID.MAGIC_LONGBOW,
		ItemID.YEW_SHORTBOW,
		ItemID.YEW_LONGBOW,
		ItemID.MAPLE_SHORTBOW,
		ItemID.MAPLE_LONGBOW,
		ItemID.WILLOW_SHORTBOW,
		ItemID.WILLOW_LONGBOW,
		ItemID.OAK_SHORTBOW,
		ItemID.OAK_LONGBOW,
		ItemID.SHORTBOW,
		ItemID.LONGBOW
	)),

	CROSSBOWS("Crossbows", ImmutableList.of(
		ItemID.ZARYTE_XBOW,
		ItemID.ACB,
		ItemID.DRAGONHUNTER_XBOW,
		ItemID.HUNTING_CROSSBOW_SUNLIGHT,
		ItemID.HUNTING_CROSSBOW,
		ItemID.DTTD_BONE_CROSSBOW,
		ItemID.XBOWS_CROSSBOW_BLURITE,
		ItemID.XBOWS_CROSSBOW_DRAGON,
		ItemID.LEAGUE_3_RUNE_XBOW,
		ItemID.XBOWS_CROSSBOW_RUNITE,
		ItemID.XBOWS_CROSSBOW_ADAMANTITE,
		ItemID.XBOWS_CROSSBOW_MITHRIL,
		ItemID.XBOWS_CROSSBOW_STEEL,
		ItemID.XBOWS_CROSSBOW_IRON,
		ItemID.XBOWS_CROSSBOW_BRONZE,
		ItemID.PHOENIX_CROSSBOW,
		ItemID.CROSSBOW
	)),

	SWORDS("Swords", ImmutableList.of(
		ItemID.AIDE_SHORTSWORD,
		ItemID.BRONZE_SWORD,
		ItemID.BRONZE_LONGSWORD,
		ItemID.IRON_SWORD,
		ItemID.IRON_LONGSWORD,
		ItemID.STEEL_SWORD,
		ItemID.STEEL_LONGSWORD,
		ItemID.BLACK_SWORD,
		ItemID.BLACK_LONGSWORD,
		ItemID.WHITE_SWORD,
		ItemID.WHITE_LONGSWORD,
		ItemID.MITHRIL_SWORD,
		ItemID.MITHRIL_LONGSWORD,
		ItemID.ADAMANT_SWORD,
		ItemID.ADAMANT_LONGSWORD,
		ItemID.WILDERNESS_SWORD_EASY,
		ItemID.WILDERNESS_SWORD_MEDIUM,
		ItemID.WILDERNESS_SWORD_HARD,
		ItemID.WILDERNESS_SWORD_ELITE
	)),

	METAL_ARROWS(ImmutableList.of(
		ItemID.RUNE_ARROW,
		ItemID.ADAMANT_ARROW,
		ItemID.MITHRIL_ARROW,
		ItemID.STEEL_ARROW,
		ItemID.IRON_ARROW,
		ItemID.BRONZE_ARROW
	)),

	ARROWS(ImmutableList.of(
		ItemID.DRAGON_ARROW,
		ItemID.AMETHYST_ARROW,
		ItemID.RUNE_ARROW,
		ItemID.ADAMANT_ARROW,
		ItemID.MITHRIL_ARROW,
		ItemID.STEEL_ARROW,
		ItemID.IRON_ARROW,
		ItemID.BRONZE_ARROW
	)),

	BRUTAL_ARROWS(ImmutableList.of(
		ItemID.ZOGRE_BRUTAL_RUNE,
		ItemID.ZOGRE_BRUTAL_ADAMANT,
		ItemID.ZOGRE_BRUTAL_MITHRIL,
		ItemID.ZOGRE_BRUTAL_BLACK,
		ItemID.ZOGRE_BRUTAL_STEEL,
		ItemID.ZOGRE_BRUTAL_IRON,
		ItemID.ZOGRE_BRUTAL_BRONZE
	)),

	FIRE_ARROWS(ImmutableList.of(
		ItemID.DRAGON_UNLITARROW,
		ItemID.DRAGON_LITARROW,
		ItemID.AMETHYST_UNLITARROW,
		ItemID.AMETHYST_LITARROW,
		ItemID.RUNE_UNLITARROW,
		ItemID.RUNE_LITARROW,
		ItemID.ADAMANT_UNLITARROW,
		ItemID.ADAMANT_LITARROW,
		ItemID.MITHRIL_UNLITARROW,
		ItemID.MITHRIL_LITARROW,
		ItemID.STEEL_UNLITARROW,
		ItemID.STEEL_LITARROW,
		ItemID.IRON_UNLITARROW,
		ItemID.IRON_LITARROW,
		ItemID.UNLITARROW,
		ItemID.LITARROW
	)),

	SPECIAL_ARROWS(ImmutableList.of(
		ItemID.SLAYERGUIDE_BROAD_ARROWS,
		ItemID.OGRE_ARROW,
		ItemID.AIDE_ARROW,
		ItemID.ICE_ARROW
	)),

	ARROW_TIPS(ImmutableList.of(
		ItemID.DRAGON_ARROWHEADS,
		ItemID.AMETHYST_ARROWHEADS,
		ItemID.RUNE_ARROWHEADS,
		ItemID.ADAMANT_ARROWHEADS,
		ItemID.MITHRIL_ARROWHEADS,
		ItemID.STEEL_ARROWHEADS,
		ItemID.IRON_ARROWHEADS,
		ItemID.BRONZE_ARROWHEADS
	)),

	AIR_RUNE(ImmutableList.of(
		ItemID.AIRRUNE,
		ItemID.MISTRUNE,
		ItemID.SMOKERUNE,
		ItemID.DUSTRUNE
	)),

	AIR_STAFF(ImmutableList.of(
		ItemID.AIR_BATTLESTAFF,
		ItemID.MYSTIC_AIR_STAFF,
		ItemID.STAFF_OF_AIR,
		ItemID.SMOKE_BATTLESTAFF,
		ItemID.MYSTIC_SMOKE_BATTLESTAFF,
		ItemID.DUST_BATTLESTAFF,
		ItemID.MYSTIC_DUST_BATTLESTAFF,
		ItemID.MIST_BATTLESTAFF,
		ItemID.MYSTIC_MIST_BATTLESTAFF
	)),

	FIRE_RUNE(ImmutableList.of(
		ItemID.FIRERUNE,
		ItemID.LAVARUNE,
		ItemID.SMOKERUNE,
		ItemID.STEAMRUNE
	)),

	FIRE_STAFF(ImmutableList.of(
		ItemID.FIRE_BATTLESTAFF,
		ItemID.MYSTIC_FIRE_STAFF,
		ItemID.STAFF_OF_FIRE,
		ItemID.SMOKE_BATTLESTAFF,
		ItemID.MYSTIC_SMOKE_BATTLESTAFF,
		ItemID.LAVA_BATTLESTAFF,
		ItemID.MYSTIC_LAVA_STAFF,
		ItemID.STEAM_BATTLESTAFF,
		ItemID.MYSTIC_STEAM_BATTLESTAFF
	)),

	WATER_RUNE(ImmutableList.of(
		ItemID.WATERRUNE,
		ItemID.MUDRUNE,
		ItemID.MISTRUNE,
		ItemID.STEAMRUNE
	)),

	WATER_STAFF(ImmutableList.of(
		ItemID.FIRE_BATTLESTAFF,
		ItemID.MYSTIC_FIRE_STAFF,
		ItemID.STAFF_OF_FIRE,
		ItemID.MUD_BATTLESTAFF,
		ItemID.MYSTIC_MUD_STAFF,
		ItemID.MIST_BATTLESTAFF,
		ItemID.MYSTIC_MIST_BATTLESTAFF,
		ItemID.STEAM_BATTLESTAFF,
		ItemID.MYSTIC_STEAM_BATTLESTAFF
	)),

	EARTH_RUNE(ImmutableList.of(
		ItemID.EARTHRUNE,
		ItemID.MUDRUNE,
		ItemID.LAVARUNE,
		ItemID.DUSTRUNE
	)),

	EARTH_STAFF(ImmutableList.of(
		ItemID.EARTH_BATTLESTAFF,
		ItemID.MYSTIC_EARTH_STAFF,
		ItemID.STAFF_OF_EARTH,
		ItemID.MUD_BATTLESTAFF,
		ItemID.MYSTIC_MUD_STAFF,
		ItemID.DUST_BATTLESTAFF,
		ItemID.MYSTIC_DUST_BATTLESTAFF,
		ItemID.LAVA_BATTLESTAFF,
		ItemID.MYSTIC_LAVA_STAFF
	)),

	// Potions

	ANTIPOISONS(ImmutableList.of(
		ItemID.ANTIVENOM_4,
		ItemID.ANTIVENOM_3,
		ItemID.ANTIVENOM_4,
		ItemID.ANTIVENOM_2,
		ItemID.ANTIVENOM_1,
		ItemID.ANTIVENOM4,
		ItemID.ANTIVENOM3,
		ItemID.ANTIVENOM2,
		ItemID.ANTIVENOM1,
		ItemID.ANTIDOTE__4,
		ItemID.ANTIDOTE__3,
		ItemID.ANTIDOTE__2,
		ItemID.ANTIDOTE__1,
		ItemID.ANTIDOTE_4,
		ItemID.ANTIDOTE_3,
		ItemID.ANTIDOTE_2,
		ItemID.ANTIDOTE_1,
		ItemID._4DOSE2ANTIPOISON,
		ItemID._3DOSE2ANTIPOISON,
		ItemID._2DOSE2ANTIPOISON,
		ItemID._1DOSE2ANTIPOISON,
		ItemID._4DOSEANTIPOISON,
		ItemID._3DOSEANTIPOISON,
		ItemID._2DOSEANTIPOISON,
		ItemID._1DOSEANTIPOISON,
		ItemID.RELICYMS_BALM4,
		ItemID.RELICYMS_BALM3,
		ItemID.RELICYMS_BALM2,
		ItemID.RELICYMS_BALM1,
		ItemID.SANFEW_SALVE_4_DOSE,
		ItemID.SANFEW_SALVE_3_DOSE,
		ItemID.SANFEW_SALVE_2_DOSE,
		ItemID.SANFEW_SALVE_1_DOSE,
		ItemID.BRUTAL_RELICYMS_BALM2,
		ItemID.BRUTAL_RELICYMS_BALM1,
		ItemID.BRUTAL_2DOSEANTIPOISON,
		ItemID.BRUTAL_1DOSEANTIPOISON,
		ItemID.BRUTAL_ANTIDOTE_2,
		ItemID.BRUTAL_ANTIDOTE_1
	)),

	ANTIVENOMS(ImmutableList.of(
		ItemID.ANTIVENOM_4,
		ItemID.ANTIVENOM_3,
		ItemID.ANTIVENOM_2,
		ItemID.ANTIVENOM_1,
		ItemID.ANTIVENOM4,
		ItemID.ANTIVENOM3,
		ItemID.ANTIVENOM2,
		ItemID.ANTIVENOM1
	)),

	ANTIDISEASE(ImmutableList.of(
		ItemID.JEWL_BRACELET_OF_INNOCULATION,
		ItemID.RELICYMS_BALM4,
		ItemID.RELICYMS_BALM3,
		ItemID.RELICYMS_BALM2,
		ItemID.RELICYMS_BALM1,
		ItemID.SANFEW_SALVE_4_DOSE,
		ItemID.SANFEW_SALVE_3_DOSE,
		ItemID.SANFEW_SALVE_2_DOSE,
		ItemID.SANFEW_SALVE_1_DOSE,
		ItemID.BRUTAL_RELICYMS_BALM2,
		ItemID.BRUTAL_RELICYMS_BALM1
	)),

	ANTIFIRE(ImmutableList.of(
		ItemID._4DOSE4ANTIDRAGON,
		ItemID._3DOSE4ANTIDRAGON,
		ItemID._2DOSE4ANTIDRAGON,
		ItemID._1DOSE4ANTIDRAGON,
		ItemID.BRUTAL_2DOSE4ANTIDRAGON,
		ItemID.BRUTAL_1DOSE4ANTIDRAGON,
		ItemID._4DOSE3ANTIDRAGON,
		ItemID._3DOSE3ANTIDRAGON,
		ItemID._2DOSE3ANTIDRAGON,
		ItemID._1DOSE3ANTIDRAGON,
		ItemID.BRUTAL_2DOSE3ANTIDRAGON,
		ItemID.BRUTAL_1DOSE3ANTIDRAGON,
		ItemID._4DOSE2ANTIDRAGON,
		ItemID._3DOSE2ANTIDRAGON,
		ItemID._2DOSE2ANTIDRAGON,
		ItemID._1DOSE2ANTIDRAGON,
		ItemID.BRUTAL_2DOSE2ANTIDRAGON,
		ItemID.BRUTAL_1DOSE2ANTIDRAGON,
		ItemID._4DOSE1ANTIDRAGON,
		ItemID._3DOSE1ANTIDRAGON,
		ItemID._2DOSE1ANTIDRAGON,
		ItemID._1DOSE1ANTIDRAGON,
		ItemID.BRUTAL_2DOSE1ANTIDRAGON,
		ItemID.BRUTAL_1DOSE1ANTIDRAGON
	)),

	PRAYER_POTIONS(ImmutableList.of(
		ItemID._4DOSEPRAYERRESTORE,
		ItemID._3DOSEPRAYERRESTORE,
		ItemID._2DOSEPRAYERRESTORE,
		ItemID._1DOSEPRAYERRESTORE
	)),

	RESTORE_POTIONS(ImmutableList.of(
		ItemID._4DOSE2RESTORE,
		ItemID._3DOSE2RESTORE,
		ItemID._2DOSE2RESTORE,
		ItemID._1DOSE2RESTORE,
		ItemID._4DOSESTATRESTORE,
		ItemID._3DOSESTATRESTORE,
		ItemID._2DOSESTATRESTORE,
		ItemID._1DOSESTATRESTORE
	)),

	SUPER_RESTORE_POTIONS(ImmutableList.of(
		ItemID._4DOSE2RESTORE,
		ItemID._3DOSE2RESTORE,
		ItemID._2DOSE2RESTORE,
		ItemID._1DOSE2RESTORE
	)),

	SUPER_COMBAT_POTIONS(ImmutableList.of(
		ItemID._4DOSE2COMBAT,
		ItemID._3DOSE2COMBAT,
		ItemID._2DOSE2COMBAT,
		ItemID._1DOSE2COMBAT,
		ItemID._4DOSEDIVINECOMBAT,
		ItemID._3DOSEDIVINECOMBAT,
		ItemID._2DOSEDIVINECOMBAT,
		ItemID._1DOSEDIVINECOMBAT
	)),

	SARADOMIN_BREWS(ImmutableList.of(
		ItemID._4DOSEPOTIONOFSARADOMIN,
		ItemID._3DOSEPOTIONOFSARADOMIN,
		ItemID._2DOSEPOTIONOFSARADOMIN,
		ItemID._1DOSEPOTIONOFSARADOMIN
	)),

	RUN_RESTORE_ITEMS(ImmutableList.of(
		ItemID.SKILLCAPE_AGILITY,
		ItemID.SKILLCAPE_AGILITY_TRIMMED,
		ItemID.LUMBRIDGE_RING_ELITE,
		ItemID.LUMBRIDGE_RING_HARD,
		ItemID.LUMBRIDGE_RING_MEDIUM,
		ItemID.LUMBRIDGE_RING_EASY,
		ItemID._4DOSESTAMINA,
		ItemID._3DOSESTAMINA,
		ItemID._2DOSESTAMINA,
		ItemID._1DOSESTAMINA,
		ItemID.ALUFT_GNOME_MINT_CAKE,
		ItemID.MACRO_TRIFFIDFRUIT,
		ItemID.BRUTAL_2DOSESTAMINA,
		ItemID.BRUTAL_1DOSESTAMINA,
		ItemID._4DOSE2ENERGY,
		ItemID._3DOSE2ENERGY,
		ItemID._2DOSE2ENERGY,
		ItemID._1DOSE2ENERGY,
		ItemID._4DOSE1ENERGY,
		ItemID._3DOSE1ENERGY,
		ItemID._2DOSE1ENERGY,
		ItemID._1DOSE1ENERGY,
		ItemID.EASTER_EGG_2005_PURPLE,
		ItemID.GARDEN_WHITE_TREE_FRUIT,
		ItemID.SUMMER_PIE,
		ItemID.HALF_SUMMER_PIE,
		ItemID.CUP_GUTHIX_REST_4,
		ItemID.CUP_GUTHIX_REST_3,
		ItemID.CUP_GUTHIX_REST_2,
		ItemID.CUP_GUTHIX_REST_1,
		ItemID.PAPAYA
	)),

	STAMINA_POTIONS(ImmutableList.of(
		ItemID._4DOSESTAMINA,
		ItemID._3DOSESTAMINA,
		ItemID._2DOSESTAMINA,
		ItemID._1DOSESTAMINA,
		ItemID.BRUTAL_2DOSESTAMINA,
		ItemID.BRUTAL_1DOSESTAMINA
	)),

	AGILITY_POTIONS(ImmutableList.of(
		ItemID._4DOSE1AGILITY,
		ItemID._3DOSE1AGILITY,
		ItemID._2DOSE1AGILITY,
		ItemID._1DOSE1AGILITY
	)),

	ANTIFIRE_POTIONS(ImmutableList.of(
		ItemID._4DOSE1ANTIDRAGON,
		ItemID._3DOSE1ANTIDRAGON,
		ItemID._2DOSE1ANTIDRAGON,
		ItemID._1DOSE1ANTIDRAGON,
		ItemID._4DOSE3ANTIDRAGON,
		ItemID._3DOSE3ANTIDRAGON,
		ItemID._2DOSE3ANTIDRAGON,
		ItemID._1DOSE3ANTIDRAGON,
		ItemID._4DOSE2ANTIDRAGON,
		ItemID._3DOSE2ANTIDRAGON,
		ItemID._2DOSE2ANTIDRAGON,
		ItemID._1DOSE2ANTIDRAGON,
		ItemID._4DOSE4ANTIDRAGON,
		ItemID._3DOSE4ANTIDRAGON,
		ItemID._2DOSE4ANTIDRAGON,
		ItemID._1DOSE4ANTIDRAGON,
		ItemID.BRUTAL_2DOSE1ANTIDRAGON,
		ItemID.BRUTAL_1DOSE1ANTIDRAGON,
		ItemID.BRUTAL_2DOSE3ANTIDRAGON,
		ItemID.BRUTAL_1DOSE3ANTIDRAGON
	)),

	// Food

	GOOD_EATING_FOOD(ImmutableList.of(
		ItemID.DARK_CRAB,
		ItemID.POTATO_TUNA_SWEETCORN,
		ItemID.MANTARAY,
		ItemID.SEATURTLE,
		ItemID.PINEAPPLE_PIZZA,
		ItemID.SHARK,
		ItemID.POTATO_MUSHROOM_ONION,
		ItemID.UGTHANKI_KEBAB_BAD,
		ItemID.CURRY,
		ItemID.TBWT_COOKED_KARAMBWAN,
		ItemID.ANCHOVIE_PIZZA,
		ItemID.ANGLERFISH,
		ItemID.MONKFISH,
		ItemID.POTATO_CHEESE,
		ItemID.MEAT_PIZZA,
		ItemID.POTATO_BUTTER,
		ItemID.SWORDFISH,
		ItemID.PLAIN_PIZZA,
		ItemID.BASS,
		ItemID.LOBSTER,
		ItemID.CHOCOLATE_CAKE,
		ItemID.CAKE,
		ItemID.STEW,
		ItemID.TUNA,
		ItemID.SALMON,
		ItemID.PIKE,
		ItemID.COD,
		ItemID.TROUT,
		ItemID.MACKEREL,
		ItemID.HERRING,
		ItemID.BREAD,
		ItemID.SARDINE,
		ItemID.COOKED_MEAT,
		ItemID.COOKED_CHICKEN,
		ItemID.SHRIMP
	)),

	FISH_FOOD(ImmutableList.of(
		ItemID.DARK_CRAB,
		ItemID.MANTARAY,
		ItemID.ANGLERFISH,
		ItemID.SEATURTLE,
		ItemID.SHARK,
		ItemID.TBWT_COOKED_KARAMBWAN,
		ItemID.MONKFISH,
		ItemID._100_JUBBLY_MEAT_COOKED,
		ItemID.LAVA_EEL,
		ItemID.SWORDFISH,
		ItemID.BASS,
		ItemID.LOBSTER,
		ItemID.HUNTING_FISH_SPECIAL,
		ItemID.TUNA,
		ItemID.CAVE_EEL,
		ItemID.SALMON,
		ItemID.PIKE,
		ItemID.COD,
		ItemID.TROUT,
		ItemID.MACKEREL,
		ItemID.HERRING,
		ItemID.SARDINE,
		ItemID.SHRIMP
	)),

	GNOME_FOOD(ImmutableList.of(
		ItemID.TANGLED_TOADS_LEGS,
		ItemID.ALUFT_TANGLED_TOADS_LEGS,
		ItemID.CHOCOLATE_BOMB,
		ItemID.ALUFT_CHOCOLATE_BOMB,
		ItemID.WORM_HOLE,
		ItemID.ALUFT_WORM_HOLE,
		ItemID.VEG_BALL,
		ItemID.ALUFT_VEG_BALL,
		ItemID.FRUIT_BATTA,
		ItemID.ALUFT_FRUIT_BATTA,
		ItemID.TOAD_BATTA,
		ItemID.ALUFT_TOAD_BATTA,
		ItemID.WORM_BATTA,
		ItemID.ALUFT_WORM_BATTA,
		ItemID.VEGETABLE_BATTA,
		ItemID.ALUFT_VEGETABLE_BATTA,
		ItemID.CHEESE_TOM_BATTA,
		ItemID.ALUFT_CHEESE_TOM_BATTA,
		ItemID.FRUIT_BLAST,
		ItemID.ALUFT_FRUIT_BLAST,
		ItemID.PINEAPPLE_PUNCH,
		ItemID.ALUFT_PINEAPPLE_PUNCH,
		ItemID.TOAD_CRUNCHIES,
		ItemID.ALUFT_TOAD_CRUNCHIES,
		ItemID.WORM_CRUNCHIES,
		ItemID.ALUFT_WORM_CRUNCHIES,
		ItemID.SPICY_CRUNCHIES,
		ItemID.ALUFT_SPICY_CRUNCHIES,
		ItemID.CHOCCHIP_CRUNCHIES,
		ItemID.ALUFT_CHOCCHIP_CRUNCHIES,
		ItemID.BLURBERRY_SPECIAL,
		ItemID.ALUFT_BLURBERRY_SPECIAL,
		ItemID.WIZARD_BLIZZARD,
		ItemID.ALUFT_COCTAIL_GLASS_EMPTY,
		ItemID.ALUFT_COCTAIL_GLASS_EMPTY_DUMMY,
		ItemID.ALUFT_WIZARD_BLIZZARD,
		ItemID.SGG,
		ItemID.ALUFT_SGG,
		ItemID.DRUNK_DRAGON,
		ItemID.ALUFT_DRUNK_DRAGON,
		ItemID.CHOCOLATE_SATURDAY,
		ItemID.ALUFT_CHOC_SATURDAY
	)),

	STEWS(ImmutableList.of(
		ItemID.STEW,
		ItemID.CURRY
	)),

	PIZZAS(ImmutableList.of(
		ItemID.PINEAPPLE_PIZZA,
		ItemID.ANCHOVIE_PIZZA,
		ItemID.MEAT_PIZZA,
		ItemID.PLAIN_PIZZA
	)),

	POTATO_FOOD(ImmutableList.of(
		ItemID.POTATO_TUNA_SWEETCORN,
		ItemID.POTATO_MUSHROOM_ONION,
		ItemID.POTATO_EGG_TOMATO,
		ItemID.POTATO_CHEESE,
		ItemID.POTATO_CHILLI_CARNE,
		ItemID.POTATO_BUTTER,
		ItemID.POTATO_BAKED
	)),

	PIES(ImmutableList.of(
		ItemID.SUMMER_PIE,
		ItemID.WILD_PIE,
		ItemID.DRAGONFRUIT_PIE,
		ItemID.ADMIRAL_PIE,
		ItemID.MUSHROOM_PIE,
		ItemID.BOTANICAL_PIE,
		ItemID.FISH_PIE,
		ItemID.GARDEN_PIE,
		ItemID.APPLE_PIE,
		ItemID.MUD_PIE,
		ItemID.MEAT_PIE,
		ItemID.REDBERRY_PIE
	)),

	// Teleport items

	GAMES_NECKLACES(ImmutableList.of(
		ItemID.NECKLACE_OF_MINIGAMES_1,
		ItemID.NECKLACE_OF_MINIGAMES_2,
		ItemID.NECKLACE_OF_MINIGAMES_3,
		ItemID.NECKLACE_OF_MINIGAMES_4,
		ItemID.NECKLACE_OF_MINIGAMES_5,
		ItemID.NECKLACE_OF_MINIGAMES_6,
		ItemID.NECKLACE_OF_MINIGAMES_7,
		ItemID.NECKLACE_OF_MINIGAMES_8
	)),

	RING_OF_DUELINGS(ImmutableList.of(
		ItemID.RING_OF_DUELING_1,
		ItemID.RING_OF_DUELING_2,
		ItemID.RING_OF_DUELING_3,
		ItemID.RING_OF_DUELING_4,
		ItemID.RING_OF_DUELING_5,
		ItemID.RING_OF_DUELING_6,
		ItemID.RING_OF_DUELING_7,
		ItemID.RING_OF_DUELING_8
	)),

	BURNING_AMULETS(ImmutableList.of(
		ItemID.BURNING_AMULET_1,
		ItemID.BURNING_AMULET_2,
		ItemID.BURNING_AMULET_3,
		ItemID.BURNING_AMULET_4,
		ItemID.BURNING_AMULET_5
	)),

	NECKLACE_OF_PASSAGES(ImmutableList.of(
		ItemID.NECKLACE_OF_PASSAGE_1,
		ItemID.NECKLACE_OF_PASSAGE_2,
		ItemID.NECKLACE_OF_PASSAGE_3,
		ItemID.NECKLACE_OF_PASSAGE_4,
		ItemID.NECKLACE_OF_PASSAGE_5
	)),

	SKILLS_NECKLACES(ImmutableList.of(
		ItemID.JEWL_NECKLACE_OF_SKILLS_1,
		ItemID.JEWL_NECKLACE_OF_SKILLS_2,
		ItemID.JEWL_NECKLACE_OF_SKILLS_3,
		ItemID.JEWL_NECKLACE_OF_SKILLS_4,
		ItemID.JEWL_NECKLACE_OF_SKILLS_5,
		ItemID.JEWL_NECKLACE_OF_SKILLS_6
	)),

	RING_OF_WEALTHS(ImmutableList.of(
		ItemID.RING_OF_WEALTH_1,
		ItemID.RING_OF_WEALTH_I1,
		ItemID.RING_OF_WEALTH_2,
		ItemID.RING_OF_WEALTH_I2,
		ItemID.RING_OF_WEALTH_3,
		ItemID.RING_OF_WEALTH_I3,
		ItemID.RING_OF_WEALTH_4,
		ItemID.RING_OF_WEALTH_I4,
		ItemID.RING_OF_WEALTH_5,
		ItemID.RING_OF_WEALTH_I5
	)),

	COMBAT_BRACELETS(ImmutableList.of(
		ItemID.JEWL_BRACELET_OF_COMBAT_1,
		ItemID.JEWL_BRACELET_OF_COMBAT_2,
		ItemID.JEWL_BRACELET_OF_COMBAT_3,
		ItemID.JEWL_BRACELET_OF_COMBAT_4,
		ItemID.JEWL_BRACELET_OF_COMBAT_5,
		ItemID.JEWL_BRACELET_OF_COMBAT_6
	)),

	AMULET_OF_GLORIES(ImmutableList.of(
		ItemID.AMULET_OF_GLORY_INF,
		ItemID.AMULET_OF_GLORY_1,
		ItemID.TRAIL_AMULET_OF_GLORY_1,
		ItemID.AMULET_OF_GLORY_2,
		ItemID.TRAIL_AMULET_OF_GLORY_2,
		ItemID.AMULET_OF_GLORY_3,
		ItemID.TRAIL_AMULET_OF_GLORY_3,
		ItemID.AMULET_OF_GLORY_4,
		ItemID.TRAIL_AMULET_OF_GLORY_4,
		ItemID.AMULET_OF_GLORY_5,
		ItemID.TRAIL_AMULET_OF_GLORY_5,
		ItemID.AMULET_OF_GLORY_6,
		ItemID.TRAIL_AMULET_OF_GLORY_6
	)),

	DIGSITE_PENDANTS(ImmutableList.of(
		ItemID.NECKLACE_OF_DIGSITE_1,
		ItemID.NECKLACE_OF_DIGSITE_2,
		ItemID.NECKLACE_OF_DIGSITE_3,
		ItemID.NECKLACE_OF_DIGSITE_4,
		ItemID.NECKLACE_OF_DIGSITE_5
	)),

	SLAYER_RINGS(ImmutableList.of(
		ItemID.SLAYER_RING_ETERNAL,
		ItemID.SLAYER_RING_1,
		ItemID.SLAYER_RING_2,
		ItemID.SLAYER_RING_3,
		ItemID.SLAYER_RING_4,
		ItemID.SLAYER_RING_5,
		ItemID.SLAYER_RING_6,
		ItemID.SLAYER_RING_7,
		ItemID.SLAYER_RING_8
	)),

	PHAROAH_SCEPTRE(ImmutableList.of(
		ItemID.PHARAOHS_SCEPTRE_CHARGED,
		ItemID.NTK_JEWELLED_SCEPTRE_3
	)),

	EXPLORERS_RINGS(ImmutableList.of(
		ItemID.LUMBRIDGE_RING_ELITE,
		ItemID.LUMBRIDGE_RING_HARD,
		ItemID.LUMBRIDGE_RING_MEDIUM
	)),

	// Logs

	LOGS_FOR_FIRE(ImmutableList.of(
		ItemID.LOGS,
		ItemID.OAK_LOGS,
		ItemID.WILLOW_LOGS,
		ItemID.TEAK_LOGS,
		ItemID.REDWOOD_LOGS,
		ItemID.MAPLE_LOGS,
		ItemID.MAHOGANY_LOGS,
		ItemID.YEW_LOGS,
		ItemID.MAGIC_LOGS,
		ItemID.BLISTERWOOD_LOGS,
		ItemID.ARCTIC_PINE_LOG,
		ItemID.ACHEY_TREE_LOGS,
		ItemID.REDWOOD_LOGS_PYRE,
		ItemID.MAGIC_LOGS_PYRE,
		ItemID.YEW_LOGS_PYRE,
		ItemID.MAHOGANY_LOGS_PYRE,
		ItemID.MAPLE_LOGS_PYRE,
		ItemID.ARCTIC_PINE_LOGS_PYRE,
		ItemID.TEAK_LOGS_PYRE,
		ItemID.WILLOW_LOGS_PYRE,
		ItemID.OAK_LOGS_PYRE,
		ItemID.LOGS_PYRE,
		ItemID.GREEN_LOGS,
		ItemID.RED_LOGS,
		ItemID.TRAIL_LOGS_PURPLE,
		ItemID.TRAIL_LOGS_WHITE,
		ItemID.BLUE_LOGS
	)),

	BONES(ImmutableList.of(
		ItemID.BONES,
		ItemID.BONES_BURNT,
		ItemID.WOLF_BONES,
		ItemID.BAT_BONES,
		ItemID.BIG_BONES,
		ItemID.TBWT_JOGRE_BONES,
		ItemID.BABYDRAGON_BONES,
		ItemID.DRAGON_BONES,
		ItemID.DAGANNOTH_KING_BONES
	)),

	// Other

	GREEGREES(ImmutableList.of(
		ItemID.MM_MONKEY_GREEGREE_FOR_NORMAL_MONKEY,
		ItemID.MM_MONKEY_GREEGREE_FOR_NORMAL_GORILLA,
		ItemID.MM_MONKEY_GREEGREE_FOR_ANCIENT_MONKEY_SKULL,
		ItemID.MM_MONKEY_GREEGREE_FOR_BEARDED_GORILLA,
		ItemID.MM2_KRUK_GREEGREE,
		ItemID.MM_MONKEY_GREEGREE_FOR_SMALL_NINJA_MONKEY,
		ItemID.MM_MONKEY_GREEGREE_FOR_SMALL_ZOMBIE_MONKEY,
		ItemID.MM_MONKEY_GREEGREE_FOR_LARGE_ZOMBIE_MONKEY,
		ItemID.MM_MONKEY_GREEGREE_FOR_MEDIUM_NINJA_MONKEY
	)),

	ANTIFIRE_SHIELDS(ImmutableList.of(
		ItemID.DRAGONFIRE_SHIELD,
		ItemID.DRAGONFIRE_SHIELD_UNCHARGED,
		ItemID.DRAGONFIRE_WARD,
		ItemID.DRAGONFIRE_WARD_UNCHARGED,
		ItemID.WYVERN_SHIELD,
		ItemID.WYVERN_SHIELD_UNCHARGED,
		ItemID.ANTIDRAGONBREATHSHIELD,
		ItemID.POH_TROPHY_ANTIDRAGONBREATH
	)),

	ANTI_WYVERN_SHIELDS(ImmutableList.of(
		ItemID.DRAGONFIRE_SHIELD,
		ItemID.DRAGONFIRE_SHIELD_UNCHARGED,
		ItemID.DRAGONFIRE_WARD,
		ItemID.DRAGONFIRE_WARD_UNCHARGED,
		ItemID.WYVERN_SHIELD,
		ItemID.WYVERN_SHIELD_UNCHARGED,
		ItemID.ELEMENTAL_MIND_SHIELD,
		ItemID.ELEMENTAL_SHIELD
	)),

	GHOSTSPEAK(ImmutableList.of(
		ItemID.AMULET_OF_GHOSTSPEAK,
		ItemID.AMULET_OF_GHOSTSPEAK_ENCHANTED,
		ItemID.MORYTANIA_LEGS_MEDIUM,
		ItemID.MORYTANIA_LEGS_HARD,
		ItemID.MORYTANIA_LEGS_ELITE
	)),

	LIGHT_SOURCES("Light_sources", ImmutableList.of(
		ItemID.SKILLCAPE_FIREMAKING_TRIMMED,
		ItemID.SKILLCAPE_FIREMAKING,
		ItemID.SKILLCAPE_MAX,
		ItemID.WINT_TORCH,
		ItemID.WINT_TORCH_OFFHAND,
		ItemID.SEERS_HEADBAND_ELITE,
		ItemID.SEERS_HEADBAND_HARD,
		ItemID.SEERS_HEADBAND_MEDIUM,
		ItemID.SEERS_HEADBAND_EASY,
		ItemID.BULLSEYE_LANTERN_LIT,
		ItemID.TOG_SAPPHIRE_LANTERN_LIT,
		ItemID.BULLSEYE_LANTERN_LIT_LUNAR_QUEST,
		ItemID.OIL_LANTERN_LIT,
		ItemID.CANDLE_LANTERN_LIT,
		ItemID.CANDLE_LANTERN_BLACK_LIT,
		ItemID.CAVE_GOBLIN_MINING_HELMET_LIT,
		ItemID.OIL_LAMP_LIT,
		ItemID.TORCH_LIT,
		ItemID.LIT_CANDLE,
		ItemID.LIT_BLACK_CANDLE,
		ItemID.ABYSSAL_LANTERN_NORMAL,
		ItemID.ABYSSAL_LANTERN_NORMAL_BLUE,
		ItemID.ABYSSAL_LANTERN_NORMAL_RED,
		ItemID.ABYSSAL_LANTERN_NORMAL_WHITE,
		ItemID.ABYSSAL_LANTERN_NORMAL_PURPLE,
		ItemID.ABYSSAL_LANTERN_NORMAL_GREEN,
		ItemID.ABYSSAL_LANTERN_OAK,
		ItemID.ABYSSAL_LANTERN_WILLOW,
		ItemID.ABYSSAL_LANTERN_MAPLE,
		ItemID.ABYSSAL_LANTERN_YEW,
		ItemID.ABYSSAL_LANTERN_BLISTERWOOD,
		ItemID.ABYSSAL_LANTERN_MAGIC,
		ItemID.ABYSSAL_LANTERN_REDWOOD,
		ItemID.LEAGUE_CLUE_COMPASS_TELEPORT
	)),

	CATS(ImmutableList.of(
		ItemID.WILEYCATOBJECT_HELL,
		ItemID.WILEYCATOBJECT_LIGHT,
		ItemID.WILEYCATOBJECT,
		ItemID.WILEYCATOBJECT_BROWN,
		ItemID.WILEYCATOBJECT_BLACK,
		ItemID.WILEYCATOBJECT_BROWNGREY,
		ItemID.WILEYCATOBJECT_BLUEGREY,

		ItemID.LAZYCATOBJECT_HELL,
		ItemID.LAZYCATOBJECT_LIGHT,
		ItemID.LAZYCATOBJECT,
		ItemID.LAZYCATOBJECT_BROWN,
		ItemID.LAZYCATOBJECT_BLACK,
		ItemID.LAZYCATOBJECT_BROWNGREY,
		ItemID.LAZYCATOBJECT_BLUEGREY,

		ItemID.GROWNCATOBJECT_HELL,
		ItemID.GROWNCATOBJECT,
		ItemID.GROWNCATOBJECT_LIGHT,
		ItemID.GROWNCATOBJECT_BROWN,
		ItemID.GROWNCATOBJECT_BLACK,
		ItemID.GROWNCATOBJECT_BROWNGREY,
		ItemID.GROWNCATOBJECT_BLUEGREY,

		ItemID.KITTENOBJECT_HELL,
		ItemID.KITTENOBJECT,
		ItemID.KITTENOBJECT_LIGHT,
		ItemID.KITTENOBJECT_BROWN,
		ItemID.KITTENOBJECT_BLACK,
		ItemID.KITTENOBJECT_BROWNGREY,
		ItemID.KITTENOBJECT_BLUEGREY,
		// Overgrown cats
		ItemID.OVERGROWNCATOBJECT_HELL,
		ItemID.OVERGROWNCATOBJECT,
		ItemID.OVERGROWNCATOBJECT_LIGHT,
		ItemID.OVERGROWNCATOBJECT_BROWN,
		ItemID.OVERGROWNCATOBJECT_BLACK,
		ItemID.OVERGROWNCATOBJECT_BROWNGREY,
		ItemID.OVERGROWNCATOBJECT_BLUEGREY
	)),

	HUNTING_CATS(ImmutableList.of(
		ItemID.WILEYCATOBJECT_HELL,
		ItemID.WILEYCATOBJECT_LIGHT,
		ItemID.WILEYCATOBJECT,
		ItemID.WILEYCATOBJECT_BROWN,
		ItemID.WILEYCATOBJECT_BLACK,
		ItemID.WILEYCATOBJECT_BROWNGREY,
		ItemID.WILEYCATOBJECT_BLUEGREY,

		ItemID.LAZYCATOBJECT_HELL,
		ItemID.LAZYCATOBJECT_LIGHT,
		ItemID.LAZYCATOBJECT,
		ItemID.LAZYCATOBJECT_BROWN,
		ItemID.LAZYCATOBJECT_BLACK,
		ItemID.LAZYCATOBJECT_BROWNGREY,
		ItemID.LAZYCATOBJECT_BLUEGREY,

		ItemID.GROWNCATOBJECT_HELL,
		ItemID.GROWNCATOBJECT,
		ItemID.GROWNCATOBJECT_LIGHT,
		ItemID.GROWNCATOBJECT_BROWN,
		ItemID.GROWNCATOBJECT_BLACK,
		ItemID.GROWNCATOBJECT_BROWNGREY,
		ItemID.GROWNCATOBJECT_BLUEGREY,

		ItemID.KITTENOBJECT_HELL,
		ItemID.KITTENOBJECT,
		ItemID.KITTENOBJECT_LIGHT,
		ItemID.KITTENOBJECT_BROWN,
		ItemID.KITTENOBJECT_BLACK,
		ItemID.KITTENOBJECT_BROWNGREY,
		ItemID.KITTENOBJECT_BLUEGREY
	)),

	FLOWERS(ImmutableList.of(
		ItemID.FLOWERS_WATERFALL_QUEST_RED,
		ItemID.FLOWERS_WATERFALL_QUEST_YELLOW,
		ItemID.FLOWERS_WATERFALL_QUEST_PURPLE,
		ItemID.FLOWERS_WATERFALL_QUEST_ORANGE,
		ItemID.FLOWERS_WATERFALL_QUEST_MIXED,
		ItemID.FLOWERS_WATERFALL_QUEST,
		ItemID.FLOWERS_WATERFALL_QUEST_BLACK,
		ItemID.FLOWERS_WATERFALL_QUEST_WHITE,
		ItemID.BREW_RED_FLOWER,
		ItemID.BREW_BLUE_FLOWER
	)),

	ROD_OF_IVANDIS(ImmutableList.of(
		ItemID.BURGH_ROD_COMMAND_FINAL_10,
		ItemID.BURGH_ROD_COMMAND_FINAL_9,
		ItemID.BURGH_ROD_COMMAND_FINAL_8,
		ItemID.BURGH_ROD_COMMAND_FINAL_7,
		ItemID.BURGH_ROD_COMMAND_FINAL_6,
		ItemID.BURGH_ROD_COMMAND_FINAL_5,
		ItemID.BURGH_ROD_COMMAND_FINAL_4,
		ItemID.BURGH_ROD_COMMAND_FINAL_3,
		ItemID.BURGH_ROD_COMMAND_FINAL_2,
		ItemID.BURGH_ROD_COMMAND_FINAL_1
	)),

	SALVE_AMULET(ImmutableList.of(
		ItemID.NZONE_SALVE_AMULET_E,
		ItemID.LOTR_CRYSTALSHARD_NECKLACE_UPGRADE,
		ItemID.NZONE_SALVE_AMULET,
		ItemID.CRYSTALSHARD_NECKLACE,
		ItemID.SW_SALVE_AMULET_E,
		ItemID.SW_SALVE_AMULET,
		ItemID.PVPA_SALVE_AMULET,
		ItemID.PVPA_SALVE_AMULET_E
	)),

	WATERING_CANS(ImmutableList.of(
		ItemID.ZEAH_WATERINGCAN,
		ItemID.WATERING_CAN_8,
		ItemID.WATERING_CAN_7,
		ItemID.WATERING_CAN_6,
		ItemID.WATERING_CAN_5,
		ItemID.WATERING_CAN_4,
		ItemID.WATERING_CAN_3,
		ItemID.WATERING_CAN_2,
		ItemID.WATERING_CAN_1
	)),

	ENCHANTED_LYRE(ImmutableList.of(
		ItemID.MAGIC_STRUNG_LYRE_INFINITE,
		ItemID.MAGIC_STRUNG_LYRE_5,
		ItemID.MAGIC_STRUNG_LYRE_4,
		ItemID.MAGIC_STRUNG_LYRE_3,
		ItemID.MAGIC_STRUNG_LYRE_2,
		ItemID.MAGIC_STRUNG_LYRE
	)),

	SKILLCAPE(ImmutableList.of(
		ItemID.SKILLCAPE_AGILITY,
		ItemID.SKILLCAPE_AGILITY_TRIMMED,
		ItemID.SKILLCAPE_ATTACK,
		ItemID.SKILLCAPE_ATTACK_TRIMMED,
		ItemID.SKILLCAPE_CONSTRUCTION,
		ItemID.SKILLCAPE_CONSTRUCTION_TRIMMED,
		ItemID.SKILLCAPE_COOKING,
		ItemID.SKILLCAPE_COOKING_TRIMMED,
		ItemID.SKILLCAPE_CRAFTING,
		ItemID.SKILLCAPE_CRAFTING_TRIMMED,
		ItemID.SKILLCAPE_DEFENCE,
		ItemID.SKILLCAPE_DEFENCE_TRIMMED,
		ItemID.SKILLCAPE_FARMING,
		ItemID.SKILLCAPE_FARMING_TRIMMED,
		ItemID.SKILLCAPE_FIREMAKING,
		ItemID.SKILLCAPE_FIREMAKING_TRIMMED,
		ItemID.SKILLCAPE_FISHING,
		ItemID.SKILLCAPE_FISHING_TRIMMED,
		ItemID.SKILLCAPE_FLETCHING,
		ItemID.SKILLCAPE_FLETCHING_TRIMMED,
		ItemID.SKILLCAPE_HERBLORE,
		ItemID.SKILLCAPE_HERBLORE_TRIMMED,
		ItemID.SKILLCAPE_HITPOINTS,
		ItemID.SKILLCAPE_HITPOINTS_TRIMMED,
		ItemID.SKILLCAPE_HUNTING,
		ItemID.SKILLCAPE_HUNTING_TRIMMED,
		ItemID.SKILLCAPE_MAGIC,
		ItemID.SKILLCAPE_MAGIC_TRIMMED,
		ItemID.SKILLCAPE_MINING,
		ItemID.SKILLCAPE_MINING_TRIMMED,
		ItemID.SKILLCAPE_PRAYER,
		ItemID.SKILLCAPE_PRAYER_TRIMMED,
		ItemID.SKILLCAPE_RANGING,
		ItemID.SKILLCAPE_RANGING_TRIMMED,
		ItemID.SKILLCAPE_RUNECRAFTING,
		ItemID.SKILLCAPE_RUNECRAFTING_TRIMMED,
		ItemID.SKILLCAPE_SLAYER,
		ItemID.SKILLCAPE_SLAYER_TRIMMED,
		ItemID.SKILLCAPE_SMITHING,
		ItemID.SKILLCAPE_SMITHING_TRIMMED,
		ItemID.SKILLCAPE_STRENGTH,
		ItemID.SKILLCAPE_STRENGTH_TRIMMED,
		ItemID.SKILLCAPE_THIEVING,
		ItemID.SKILLCAPE_THIEVING_TRIMMED,
		ItemID.SKILLCAPE_WOODCUTTING,
		ItemID.SKILLCAPE_WOODCUTTING_TRIMMED,
		ItemID.SKILLCAPE_QP,
		ItemID.SKILLCAPE_QP_TRIMMED
	)),

	SLAYER_HELMETS(SharedCollections.slayer_helmets),

	RAW_FISH(ImmutableList.of(
		ItemID.RAW_SHRIMP,
		ItemID.RAW_SARDINE,
		ItemID.TBWT_RAW_KARAMBWANJI,
		ItemID.RAW_HERRING,
		ItemID.RAW_ANCHOVIES,
		ItemID.RAW_MACKEREL,
		ItemID.RAW_TROUT,
		ItemID.RAW_COD,
		ItemID.RAW_PIKE,
		ItemID.MORT_SLIMEY_EEL,
		ItemID.RAW_SALMON,
		ItemID.RAW_TUNA,
		ItemID.HUNTING_RAW_FISH_SPECIAL,
		ItemID.RAW_CAVE_EEL,
		ItemID.RAW_LOBSTER,
		ItemID.RAW_BASS,
		ItemID.RAW_SWORDFISH,
		ItemID.RAW_LAVA_EEL,
		ItemID.RAW_MONKFISH,
		ItemID.TBWT_RAW_KARAMBWAN,
		ItemID.RAW_SHARK,
		ItemID.RAW_SEATURTLE,
		ItemID.RAW_MANTARAY,
		ItemID.RAW_ANGLERFISH,
		ItemID.RAW_DARK_CRAB
	)),

	COMPOST(ImmutableList.of(
		ItemID.BOTTOMLESS_COMPOST_BUCKET_FILLED,
		ItemID.BUCKET_ULTRACOMPOST,
		ItemID.BUCKET_SUPERCOMPOST,
		ItemID.BUCKET_COMPOST
	)),

	FAIRY_STAFF(ImmutableList.of(
		ItemID.LUNAR_MOONCLAN_LIMINAL_STAFF,
		ItemID.DRAMEN_STAFF_WATER,
		ItemID.DRAMEN_STAFF_FIRE,
		ItemID.DRAMEN_STAFF_AIR,
		ItemID.DRAMEN_STAFF
	)),

	EARTH_ALTAR(ImmutableList.of(
		ItemID.TIARA_ELEMENTAL,
		ItemID.ELEMENTAL_TALISMAN,
		ItemID.TIARA_EARTH,
		ItemID.EARTH_TALISMAN
	)),

	ESSENCE_LOW(ImmutableList.of(
		ItemID.BLANKRUNE_DAEYALT,
		ItemID.BLANKRUNE_HIGH,
		ItemID.BLANKRUNE
	)),

	ESSENCE_HIGH(ImmutableList.of(
		ItemID.BLANKRUNE_DAEYALT,
		ItemID.BLANKRUNE_HIGH
	)),

	COINS(ImmutableList.of(
		ItemID.COINS,
		ItemID.MAGICTRAINING_COINS,
		ItemID.CERT_ROLL,
		ItemID.COINS
	)),

	COOKING_GUILD(ImmutableList.of(
		ItemID.CHEFS_HAT,
		ItemID.VARROCK_ARMOUR_HARD,
		ItemID.VARROCK_ARMOUR_ELITE,
		ItemID.SKILLCAPE_COOKING_TRIMMED,
		ItemID.SKILLCAPE_COOKING
	)),

	MINING_HELM(ImmutableList.of(
		ItemID.CAVE_GOBLIN_MINING_HELMET_UNLIT,
		ItemID.CAVE_GOBLIN_MINING_HELMET_LIT
	)),

	QUICKLIME_GLOVES(ImmutableList.of(
		ItemID.FEROCIOUS_GLOVES, ItemID.HUNDRED_GAUNTLETS_LEVEL_10, ItemID.HUNDRED_GAUNTLETS_LEVEL_9, ItemID.GRANITE_GLOVES,
		ItemID.HUNDRED_GAUNTLETS_LEVEL_8, ItemID.HUNDRED_GAUNTLETS_LEVEL_7, ItemID.HUNDRED_GAUNTLETS_LEVEL_6, ItemID.HUNDRED_GAUNTLETS_LEVEL_5,
		ItemID.HUNDRED_GAUNTLETS_LEVEL_4, ItemID.HUNDRED_GAUNTLETS_LEVEL_3, ItemID.HUNDRED_GAUNTLETS_LEVEL_2, ItemID.ANTISANTA_GLOVES,
		ItemID.WOLFENGLOVES_GREY, ItemID.WOLFENGLOVES_CRIMSON, ItemID.WOLFENGLOVES_TANGERINE, ItemID.WOLFENGLOVES_OCEAN,
		ItemID.WOLFENGLOVES_PURPLE, ItemID.COW_GLOVES, ItemID.VIKINGGLOVES, ItemID.HUNTING_SILENT_GLOVES,
		ItemID.SECRET_GHOST_GLOVES, ItemID.HUNDRED_GAUNTLETS_LEVEL_1, ItemID.HAM_GLOVES, ItemID.ICE_GLOVES,
		ItemID.MAGICTRAINING_INFINITYGLOVES, ItemID.LEATHER_GLOVES, ItemID.LUNAR_GLOVES, ItemID.MACRO_MIME_GLOVES,
		ItemID.LUNAR_MOONCLAN_GLOVES, ItemID.MOURNING_MOURNER_GLOVES, ItemID.MYSTIC_GLOVES, ItemID.MYSTIC_GLOVES_DARK,
		ItemID.MYSTIC_GLOVES_DUSK, ItemID.MYSTIC_GLOVES_LIGHT, ItemID.BARBASSAULT_PENANCE_GLOVES, ItemID.DAGGANOTH_MELEE_GLOVES,
		ItemID.ROGUESDEN_GLOVES, ItemID.SANTA_GLOVES, ItemID.SLAYERGUIDE_SLAYER_GLOVES, ItemID.DAGGANOTH_RANGE_GLOVES,
		ItemID.PEST_VOID_KNIGHT_GLOVES, ItemID.WHITE_GLOVES, ItemID.MACRO_DIGGER_GLOVES, ItemID.ANCIENT_CEREMONIAL_GLOVES,
		ItemID.BLOODBARK_GAUNTLETS, ItemID.EASTER16_ONSIE_GLOVES, ItemID.GAUNTLETS_OF_CHAOS, ItemID.CLUE_HUNTER_GLOVES,
		ItemID.GAUNTLETS_OF_COOKING, ItemID.HUNDRED_PIRATE_CRAB_SHELL_GAUNTLET, ItemID.PIRATE_CRABCLAW_HOOK, ItemID.DRAGONSTONE_GAUNTLETS,
		ItemID.MGUILD_GLOVES_EXPERT, ItemID.TRAIL_GILDED_DHIDE_VAMBRACES, ItemID.ROBE_DARKNESS_HANDS, ItemID.GAUNTLETS_OF_GOLDSMITHING,
		ItemID.GROUP_IRONMAN_GLOVES, ItemID.GROUP_IRONMAN_GLOVES_UNRANKED, ItemID.HARDCORE_GROUP_IRONMAN_GLOVES, ItemID.HOLY_WRAPS,
		ItemID.KLANKS_GAUNTLETS, ItemID.MGUILD_GLOVES, ItemID.ORNATE_GLOVES, ItemID.PIRATEHOOK,
		ItemID.RANGER_GLOVES, ItemID.JEWL_BRACELET_REGEN, ItemID.SAMURAI_GLOVES, ItemID.SHAYZIEN_GLOVES_5,
		ItemID.SHAYZIEN_GLOVES_4, ItemID.SHAYZIEN_GLOVES_3, ItemID.SHAYZIEN_GLOVES_2, ItemID.SHAYZIEN_GLOVES_1,
		ItemID.XMAS17_EVENT_IMP_GLOVES, ItemID.SPLITBARK_GAUNTLETS, ItemID.HW19_GHOST_GLOVES_SLIME, ItemID.HW19_GHOST_GLOVES_TEMP,
		ItemID.STEEL_GAUNTLETS, ItemID.MGUILD_GLOVES_SUPERIOR, ItemID.SWAMPBARK_GAUNTLETS, ItemID.PYROMANCER_GLOVES,
		ItemID.ZARYTE_VAMBRACES, ItemID.SMITHING_UNIFORM_GLOVES_ICE, ItemID.ATJUN_GLOVES_ELITE, ItemID.ATJUN_GLOVES_HARD,
		ItemID.ATJUN_GLOVES_MED, ItemID.ATJUN_GLOVES_EASY
	)),

	BELLADONNA_GLOVES(ImmutableList.of(
		ItemID.FEROCIOUS_GLOVES, ItemID.HUNDRED_GAUNTLETS_LEVEL_10, ItemID.HUNDRED_GAUNTLETS_LEVEL_9, ItemID.GRANITE_GLOVES,
		ItemID.HUNDRED_GAUNTLETS_LEVEL_8, ItemID.HUNDRED_GAUNTLETS_LEVEL_7, ItemID.HUNDRED_GAUNTLETS_LEVEL_6, ItemID.HUNDRED_GAUNTLETS_LEVEL_5,
		ItemID.HUNDRED_GAUNTLETS_LEVEL_4, ItemID.HUNDRED_GAUNTLETS_LEVEL_3, ItemID.HUNDRED_GAUNTLETS_LEVEL_2, ItemID.TRAIL_ANCIENT_VAMBRACES,
		ItemID.TRAIL_ARMADYL_VAMBRACES, ItemID.TRAIL_BANDOS_VAMBRACES, ItemID.BLACK_DRAGON_VAMBRACES, ItemID.HUNTING_BLACK_SPIKED_VAMBRACES,
		ItemID.BLOODBARK_GAUNTLETS, ItemID.BLUE_DRAGON_VAMBRACES, ItemID.HUNTING_BLUE_SPIKED_VAMBRACES, ItemID.GAUNTLETS_OF_CHAOS,
		ItemID.CLUE_HUNTER_GLOVES, ItemID.GAUNTLETS_OF_COOKING, ItemID.HUNDRED_PIRATE_CRAB_SHELL_GAUNTLET, ItemID.PIRATE_CRABCLAW_HOOK,
		ItemID.DRAGONSTONE_GAUNTLETS, ItemID.MGUILD_GLOVES_EXPERT, ItemID.TRAIL_GILDED_DHIDE_VAMBRACES, ItemID.ROBE_DARKNESS_HANDS,
		ItemID.GAUNTLETS_OF_GOLDSMITHING, ItemID.DRAGON_VAMBRACES, ItemID.HUNTING_GREEN_SPIKED_VAMBRACES, ItemID.GROUP_IRONMAN_GLOVES,
		ItemID.GROUP_IRONMAN_GLOVES_UNRANKED, ItemID.TRAIL_GUTHIX_VAMBRACES, ItemID.HARDCORE_GROUP_IRONMAN_GLOVES, ItemID.KLANKS_GAUNTLETS,
		ItemID.LEATHER_VAMBRACES, ItemID.MGUILD_GLOVES, ItemID.MUMMY_HANDS, ItemID.WOLFENGLOVES_GREY,
		ItemID.WOLFENGLOVES_CRIMSON, ItemID.WOLFENGLOVES_TANGERINE, ItemID.WOLFENGLOVES_OCEAN, ItemID.WOLFENGLOVES_PURPLE,
		ItemID.VIKINGGLOVES, ItemID.HUNTING_SILENT_GLOVES, ItemID.SECRET_GHOST_GLOVES, ItemID.HUNDRED_GAUNTLETS_LEVEL_1,
		ItemID.HAM_GLOVES, ItemID.ICE_GLOVES, ItemID.MAGICTRAINING_INFINITYGLOVES, ItemID.LEATHER_GLOVES,
		ItemID.LUNAR_GLOVES, ItemID.LUNAR_MOONCLAN_GLOVES, ItemID.MOURNING_MOURNER_GLOVES, ItemID.MYSTIC_GLOVES,
		ItemID.MYSTIC_GLOVES_DARK, ItemID.MYSTIC_GLOVES_DUSK, ItemID.MYSTIC_GLOVES_LIGHT, ItemID.LEAGUE_3_MYSTIC_GLOVES,
		ItemID.ORNATE_GLOVES, ItemID.BARBASSAULT_PENANCE_GLOVES, ItemID.PIRATEHOOK, ItemID.RANGER_GLOVES,
		ItemID.RED_DRAGON_VAMBRACES, ItemID.HUNTING_RED_SPIKED_VAMBRACES, ItemID.JEWL_BRACELET_REGEN, ItemID.DAGGANOTH_MELEE_GLOVES,
		ItemID.ROGUESDEN_GLOVES, ItemID.SAMURAI_GLOVES, ItemID.TRAIL_SARADOMIN_VAMBRACES, ItemID.SHAYZIEN_GLOVES_5,
		ItemID.SHAYZIEN_GLOVES_4, ItemID.SHAYZIEN_GLOVES_3, ItemID.SHAYZIEN_GLOVES_2, ItemID.SHAYZIEN_GLOVES_1,
		ItemID.SLAYERGUIDE_SLAYER_GLOVES, ItemID.SMITHING_UNIFORM_GLOVES, ItemID.SNAKESKIN_VAMBRACES, ItemID.SPIKED_VAMBRACES,
		ItemID.DAGGANOTH_RANGE_GLOVES, ItemID.SPLITBARK_GAUNTLETS, ItemID.STEEL_GAUNTLETS, ItemID.MGUILD_GLOVES_SUPERIOR,
		ItemID.SWAMPBARK_GAUNTLETS, ItemID.PEST_VOID_KNIGHT_GLOVES, ItemID.LEAGUE_3_VOID_KNIGHT_GLOVES, ItemID.WHITE_GLOVES,
		ItemID.TRAIL_ZAMORAK_VAMBRACES, ItemID.ZARYTE_VAMBRACES, ItemID.DAGGANOTH_MAGE_GLOVES, ItemID.ATJUN_GLOVES_ELITE,
		ItemID.ATJUN_GLOVES_HARD, ItemID.ATJUN_GLOVES_MED, ItemID.ATJUN_GLOVES_EASY
	)),

	GRACEFUL_TOP(ImmutableList.of(
		ItemID.GRACEFUL_TOP, ItemID.GRACEFUL_TOP_WORN, ItemID.ZEAH_GRACEFUL_TOP_ARCEUUS, ItemID.ZEAH_GRACEFUL_TOP_ARCEUUS_WORN,
		ItemID.ZEAH_GRACEFUL_TOP_PISCARILIUS, ItemID.ZEAH_GRACEFUL_TOP_PISCARILIUS_WORN, ItemID.ZEAH_GRACEFUL_TOP_LOVAKENGJ, ItemID.ZEAH_GRACEFUL_TOP_LOVAKENGJ_WORN,
		ItemID.ZEAH_GRACEFUL_TOP_SHAYZIEN, ItemID.ZEAH_GRACEFUL_TOP_SHAYZIEN_WORN, ItemID.ZEAH_GRACEFUL_TOP_HOSIDIUS, ItemID.ZEAH_GRACEFUL_TOP_HOSIDIUS_WORN,
		ItemID.ZEAH_GRACEFUL_TOP_KOUREND, ItemID.ZEAH_GRACEFUL_TOP_KOUREND_WORN, ItemID.GRACEFUL_TOP_SKILLCAPECOLOUR, ItemID.GRACEFUL_TOP_SKILLCAPECOLOUR_WORN,
		ItemID.GRACEFUL_TOP_HALLOWED, ItemID.GRACEFUL_TOP_HALLOWED_WORN, ItemID.GRACEFUL_TOP_TRAILBLAZER, ItemID.GRACEFUL_TOP_TRAILBLAZER_WORN,
		ItemID.GRACEFUL_TOP_ADVENTURER, ItemID.GRACEFUL_TOP_ADVENTURER_WORN
	)),

	GRACEFUL_LEGS(ImmutableList.of(
		ItemID.GRACEFUL_LEGS, ItemID.GRACEFUL_LEGS_WORN, ItemID.ZEAH_GRACEFUL_LEGS_ARCEUUS, ItemID.ZEAH_GRACEFUL_LEGS_ARCEUUS_WORN,
		ItemID.ZEAH_GRACEFUL_LEGS_PISCARILIUS, ItemID.ZEAH_GRACEFUL_LEGS_PISCARILIUS_WORN, ItemID.ZEAH_GRACEFUL_LEGS_LOVAKENGJ, ItemID.ZEAH_GRACEFUL_LEGS_LOVAKENGJ_WORN,
		ItemID.ZEAH_GRACEFUL_LEGS_SHAYZIEN, ItemID.ZEAH_GRACEFUL_LEGS_SHAYZIEN_WORN, ItemID.ZEAH_GRACEFUL_LEGS_HOSIDIUS, ItemID.ZEAH_GRACEFUL_LEGS_HOSIDIUS_WORN,
		ItemID.ZEAH_GRACEFUL_LEGS_KOUREND, ItemID.ZEAH_GRACEFUL_LEGS_KOUREND_WORN, ItemID.GRACEFUL_LEGS_SKILLCAPECOLOUR, ItemID.GRACEFUL_LEGS_SKILLCAPECOLOUR_WORN,
		ItemID.GRACEFUL_LEGS_HALLOWED, ItemID.GRACEFUL_LEGS_HALLOWED_WORN, ItemID.GRACEFUL_LEGS_TRAILBLAZER, ItemID.GRACEFUL_LEGS_TRAILBLAZER_WORN,
		ItemID.GRACEFUL_LEGS_ADVENTURER, ItemID.GRACEFUL_LEGS_ADVENTURER_WORN
	)),

	GRACEFUL_HOOD(ImmutableList.of(
		ItemID.GRACEFUL_HOOD, ItemID.GRACEFUL_HOOD_WORN, ItemID.ZEAH_GRACEFUL_HOOD_ARCEUUS, ItemID.ZEAH_GRACEFUL_HOOD_ARCEUUS_WORN,
		ItemID.ZEAH_GRACEFUL_HOOD_PISCARILIUS, ItemID.ZEAH_GRACEFUL_HOOD_PISCARILIUS_WORN, ItemID.ZEAH_GRACEFUL_HOOD_LOVAKENGJ, ItemID.ZEAH_GRACEFUL_HOOD_LOVAKENGJ_WORN,
		ItemID.ZEAH_GRACEFUL_HOOD_SHAYZIEN, ItemID.ZEAH_GRACEFUL_HOOD_SHAYZIEN_WORN, ItemID.ZEAH_GRACEFUL_HOOD_HOSIDIUS, ItemID.ZEAH_GRACEFUL_HOOD_HOSIDIUS_WORN,
		ItemID.ZEAH_GRACEFUL_HOOD_KOUREND, ItemID.ZEAH_GRACEFUL_HOOD_KOUREND_WORN, ItemID.GRACEFUL_HOOD_SKILLCAPECOLOUR, ItemID.GRACEFUL_HOOD_SKILLCAPECOLOUR_WORN,
		ItemID.GRACEFUL_HOOD_HALLOWED, ItemID.GRACEFUL_HOOD_HALLOWED_WORN, ItemID.GRACEFUL_HOOD_TRAILBLAZER, ItemID.GRACEFUL_HOOD_TRAILBLAZER_WORN,
		ItemID.GRACEFUL_HOOD_ADVENTURER, ItemID.GRACEFUL_HOOD_ADVENTURER_WORN
	)),

	GRACEFUL_CAPE(ImmutableList.of(
		ItemID.GRACEFUL_CAPE, ItemID.GRACEFUL_CAPE_WORN, ItemID.ZEAH_GRACEFUL_CAPE_ARCEUUS, ItemID.ZEAH_GRACEFUL_CAPE_ARCEUUS_WORN,
		ItemID.ZEAH_GRACEFUL_CAPE_PISCARILIUS, ItemID.ZEAH_GRACEFUL_CAPE_PISCARILIUS_WORN, ItemID.ZEAH_GRACEFUL_CAPE_LOVAKENGJ, ItemID.ZEAH_GRACEFUL_CAPE_LOVAKENGJ_WORN,
		ItemID.ZEAH_GRACEFUL_CAPE_SHAYZIEN, ItemID.ZEAH_GRACEFUL_CAPE_SHAYZIEN_WORN, ItemID.ZEAH_GRACEFUL_CAPE_HOSIDIUS, ItemID.ZEAH_GRACEFUL_CAPE_HOSIDIUS_WORN,
		ItemID.ZEAH_GRACEFUL_CAPE_KOUREND, ItemID.ZEAH_GRACEFUL_CAPE_KOUREND_WORN, ItemID.GRACEFUL_CAPE_SKILLCAPECOLOUR, ItemID.GRACEFUL_CAPE_SKILLCAPECOLOUR_WORN,
		ItemID.GRACEFUL_CAPE_HALLOWED, ItemID.GRACEFUL_CAPE_HALLOWED_WORN, ItemID.GRACEFUL_CAPE_TRAILBLAZER, ItemID.GRACEFUL_CAPE_TRAILBLAZER_WORN,
		ItemID.GRACEFUL_CAPE_ADVENTURER, ItemID.GRACEFUL_CAPE_ADVENTURER_WORN
	)),

	GRACEFUL_BOOTS(ImmutableList.of(
		ItemID.GRACEFUL_BOOTS, ItemID.GRACEFUL_BOOTS_WORN, ItemID.ZEAH_GRACEFUL_BOOTS_ARCEUUS, ItemID.ZEAH_GRACEFUL_BOOTS_ARCEUUS_WORN,
		ItemID.ZEAH_GRACEFUL_BOOTS_PISCARILIUS, ItemID.ZEAH_GRACEFUL_BOOTS_PISCARILIUS_WORN, ItemID.ZEAH_GRACEFUL_BOOTS_LOVAKENGJ, ItemID.ZEAH_GRACEFUL_BOOTS_LOVAKENGJ_WORN,
		ItemID.ZEAH_GRACEFUL_BOOTS_SHAYZIEN, ItemID.ZEAH_GRACEFUL_BOOTS_SHAYZIEN_WORN, ItemID.ZEAH_GRACEFUL_BOOTS_HOSIDIUS, ItemID.ZEAH_GRACEFUL_BOOTS_HOSIDIUS_WORN,
		ItemID.ZEAH_GRACEFUL_BOOTS_KOUREND, ItemID.ZEAH_GRACEFUL_BOOTS_KOUREND_WORN, ItemID.GRACEFUL_BOOTS_SKILLCAPECOLOUR, ItemID.GRACEFUL_BOOTS_SKILLCAPECOLOUR_WORN,
		ItemID.GRACEFUL_BOOTS_HALLOWED, ItemID.GRACEFUL_BOOTS_HALLOWED_WORN, ItemID.GRACEFUL_BOOTS_TRAILBLAZER, ItemID.GRACEFUL_BOOTS_TRAILBLAZER_WORN,
		ItemID.GRACEFUL_BOOTS_ADVENTURER, ItemID.GRACEFUL_BOOTS_ADVENTURER_WORN
	)),

	GRACEFUL_GLOVES(ImmutableList.of(
		ItemID.GRACEFUL_GLOVES, ItemID.GRACEFUL_GLOVES_WORN, ItemID.ZEAH_GRACEFUL_GLOVES_ARCEUUS, ItemID.ZEAH_GRACEFUL_GLOVES_ARCEUUS_WORN,
		ItemID.ZEAH_GRACEFUL_GLOVES_PISCARILIUS, ItemID.ZEAH_GRACEFUL_GLOVES_PISCARILIUS_WORN, ItemID.ZEAH_GRACEFUL_GLOVES_LOVAKENGJ, ItemID.ZEAH_GRACEFUL_GLOVES_LOVAKENGJ_WORN,
		ItemID.ZEAH_GRACEFUL_GLOVES_SHAYZIEN, ItemID.ZEAH_GRACEFUL_GLOVES_SHAYZIEN_WORN, ItemID.ZEAH_GRACEFUL_GLOVES_HOSIDIUS, ItemID.ZEAH_GRACEFUL_GLOVES_HOSIDIUS_WORN,
		ItemID.ZEAH_GRACEFUL_GLOVES_KOUREND, ItemID.ZEAH_GRACEFUL_GLOVES_KOUREND_WORN, ItemID.GRACEFUL_GLOVES_SKILLCAPECOLOUR, ItemID.GRACEFUL_GLOVES_SKILLCAPECOLOUR_WORN,
		ItemID.GRACEFUL_GLOVES_HALLOWED, ItemID.GRACEFUL_GLOVES_HALLOWED_WORN, ItemID.GRACEFUL_GLOVES_TRAILBLAZER, ItemID.GRACEFUL_GLOVES_TRAILBLAZER_WORN,
		ItemID.GRACEFUL_GLOVES_ADVENTURER, ItemID.GRACEFUL_GLOVES_ADVENTURER_WORN
	)),

	QUEST_CAPE(ImmutableList.of(
		ItemID.SKILLCAPE_QP_TRIMMED,
		ItemID.SKILLCAPE_QP
	)),

	COSMIC_ALTAR(ImmutableList.of(
		ItemID.TIARA_CATALYTIC,
		ItemID.CATALYTIC_TALISMAN,
		ItemID.TIARA_COSMIC,
		ItemID.COSMIC_TALISMAN
	)),

	WALL_BEAST(new ImmutableList.Builder<Integer>()
		.addAll(SharedCollections.slayer_helmets)
		.add(ItemID.WALLBEAST_SPIKE_HELMET)
		.build()),

	WATER_ALTAR(ImmutableList.of(
		ItemID.TIARA_ELEMENTAL,
		ItemID.ELEMENTAL_TALISMAN,
		ItemID.TIARA_WATER,
		ItemID.WATER_TALISMAN
	)),

	FIRE_ALTAR(ImmutableList.of(
		ItemID.TIARA_ELEMENTAL,
		ItemID.ELEMENTAL_TALISMAN,
		ItemID.TIARA_FIRE,
		ItemID.FIRE_TALISMAN
	)),

	PLUNDER_ARTEFACTS(ImmutableList.of(
		ItemID.NTK_IVORY_COMB,
		ItemID.NTK_SCARAB_POTTERY,
		ItemID.NTK_STATUETTE_POTTERY,
		ItemID.NTK_SEAL_STONE,
		ItemID.NTK_SCARAB_STONE,
		ItemID.NTK_STATUETTE_STONE,
		ItemID.NTK_SEAL_GOLD,
		ItemID.NTK_SCARAB_GOLD,
		ItemID.NTK_STATUETTE_GOLD
	)),

	WATERSKIN(ImmutableList.of(
		ItemID.WATER_SKIN4,
		ItemID.WATER_SKIN3,
		ItemID.WATER_SKIN2,
		ItemID.WATER_SKIN1
	)),

	GRIMY_HERB(ImmutableList.of(
		ItemID.UNIDENTIFIED_AVANTOE,
		ItemID.UNIDENTIFIED_CADANTINE,
		ItemID.UNIDENTIFIED_DWARF_WEED,
		ItemID.UNIDENTIFIED_GUAM,
		ItemID.UNIDENTIFIED_HARRALANDER,
		ItemID.UNIDENTIFIED_IRIT,
		ItemID.UNIDENTIFIED_KWUARM,
		ItemID.UNIDENTIFIED_LANTADYME,
		ItemID.UNIDENTIFIED_MARENTILL,
		ItemID.UNIDENTIFIED_RANARR,
		ItemID.UNIDENTIFIED_SNAPDRAGON,
		ItemID.UNIDENTIFIED_TARROMIN,
		ItemID.UNIDENTIFIED_TOADFLAX,
		ItemID.UNIDENTIFIED_TORSTOL
	)),

	BLACKJACKS(ImmutableList.of(
		ItemID.ROGUETRADER_BJ_DEFEND_MAPLE,
		ItemID.ROGUETRADER_BJ_ASSAULT_MAPLE,
		ItemID.ROGUETRADER_BJ_MAPLE,
		ItemID.ROGUETRADER_BJ_DEFEND_WILLOW,
		ItemID.ROGUETRADER_BJ_ASSAULT_WILLOW,
		ItemID.BLACKJACK_WILLOW,
		ItemID.ROGUETRADER_BJ_ASSAULT_OAK,
		ItemID.ROGUETRADER_BJ_DEFEND_OAK,
		ItemID.BLACKJACK_OAK
	)),

	KERIS(ImmutableList.of(
		ItemID.CONTACT_KERIS_P__,
		ItemID.CONTACT_KERIS_P_,
		ItemID.CONTACT_KERIS_P,
		ItemID.CONTACT_KERIS
	)),

	STUFFED_KQ_HEAD(ImmutableList.of(
		ItemID.POH_TROPHYDROP_KALPHITEQUEEN_STUFFED,
		ItemID.POH_PITYDROP_KALPHITEQUEEN_STUFFED
	)),

	RECHARGEABLE_NECK_BRACELET(ImmutableList.of(
		ItemID.JEWL_NECKLACE_OF_SKILLS_3,
		ItemID.JEWL_BRACELET_OF_COMBAT_3,
		ItemID.JEWL_NECKLACE_OF_SKILLS_2,
		ItemID.JEWL_BRACELET_OF_COMBAT_2,
		ItemID.JEWL_NECKLACE_OF_SKILLS_1,
		ItemID.JEWL_BRACELET_OF_COMBAT_1,
		ItemID.JEWL_NECKLACE_OF_SKILLS,
		ItemID.JEWL_BRACELET_OF_COMBAT
	)),

	DEATHALTAR(ImmutableList.of(
		ItemID.TIARA_DEATH,
		ItemID.DEATH_TALISMAN
	)),

	IMBUABLE_SALVE_AMULET(ImmutableList.of(
		ItemID.LOTR_CRYSTALSHARD_NECKLACE_UPGRADE,
		ItemID.CRYSTALSHARD_NECKLACE
	)),

	IMBUED_SALVE_AMULET(ImmutableList.of(
		ItemID.NZONE_SALVE_AMULET_E,
		ItemID.NZONE_SALVE_AMULET,
		ItemID.SW_SALVE_AMULET_E,
		ItemID.SW_SALVE_AMULET
	)),

	NON_MAGIC_TREE_ROOT(ImmutableList.of(
		ItemID.OAK_ROOTS,
		ItemID.WILLOW_ROOTS,
		ItemID.MAPLE_ROOTS,
		ItemID.YEW_ROOTS
	)),

	ARDY_CLOAKS(ImmutableList.of(
		ItemID.ARDY_CAPE_EASY,
		ItemID.ARDY_CAPE_MEDIUM,
		ItemID.ARDY_CAPE_HARD,
		ItemID.ARDY_CAPE_ELITE,
		ItemID.SKILLCAPE_MAX_ARDY
	)),
	TEAM_CAPE(ImmutableList.of(
		ItemID.WILDERNESS_CAPE_1,
		ItemID.WILDERNESS_CAPE_2,
		ItemID.WILDERNESS_CAPE_3,
		ItemID.WILDERNESS_CAPE_4,
		ItemID.WILDERNESS_CAPE_5,
		ItemID.WILDERNESS_CAPE_6,
		ItemID.WILDERNESS_CAPE_7,
		ItemID.WILDERNESS_CAPE_8,
		ItemID.WILDERNESS_CAPE_9,
		ItemID.WILDERNESS_CAPE_10,
		ItemID.WILDERNESS_CAPE_11,
		ItemID.WILDERNESS_CAPE_12,
		ItemID.WILDERNESS_CAPE_13,
		ItemID.WILDERNESS_CAPE_14,
		ItemID.WILDERNESS_CAPE_15,
		ItemID.WILDERNESS_CAPE_16,
		ItemID.WILDERNESS_CAPE_17,
		ItemID.WILDERNESS_CAPE_18,
		ItemID.WILDERNESS_CAPE_19,
		ItemID.WILDERNESS_CAPE_20,
		ItemID.WILDERNESS_CAPE_21,
		ItemID.WILDERNESS_CAPE_22,
		ItemID.WILDERNESS_CAPE_23,
		ItemID.WILDERNESS_CAPE_24,
		ItemID.WILDERNESS_CAPE_25,
		ItemID.WILDERNESS_CAPE_26,
		ItemID.WILDERNESS_CAPE_27,
		ItemID.WILDERNESS_CAPE_28,
		ItemID.WILDERNESS_CAPE_29,
		ItemID.WILDERNESS_CAPE_30,
		ItemID.WILDERNESS_CAPE_31,
		ItemID.WILDERNESS_CAPE_32,
		ItemID.WILDERNESS_CAPE_33,
		ItemID.WILDERNESS_CAPE_34,
		ItemID.WILDERNESS_CAPE_35,
		ItemID.WILDERNESS_CAPE_36,
		ItemID.WILDERNESS_CAPE_37,
		ItemID.WILDERNESS_CAPE_38,
		ItemID.WILDERNESS_CAPE_39,
		ItemID.WILDERNESS_CAPE_40,
		ItemID.WILDERNESS_CAPE_41,
		ItemID.WILDERNESS_CAPE_42,
		ItemID.WILDERNESS_CAPE_43,
		ItemID.WILDERNESS_CAPE_44,
		ItemID.WILDERNESS_CAPE_45,
		ItemID.WILDERNESS_CAPE_46,
		ItemID.WILDERNESS_CAPE_47,
		ItemID.WILDERNESS_CAPE_48,
		ItemID.WILDERNESS_CAPE_49,
		ItemID.WILDERNESS_CAPE_50
	)),

	CHAOS_ALTAR(ImmutableList.of(
		ItemID.TIARA_CATALYTIC,
		ItemID.CATALYTIC_TALISMAN,
		ItemID.TIARA_CHAOS,
		ItemID.CHAOS_TALISMAN
	)),

	RUNE_AXE_BETTER(ImmutableList.of(
		ItemID.RUNE_AXE,
		ItemID.DRAGON_AXE,
		ItemID.INFERNAL_AXE_EMPTY,
		ItemID.TRAILBLAZER_AXE_EMPTY,
		ItemID.CRYSTAL_AXE_INACTIVE,
		ItemID.CRYSTAL_AXE,
		ItemID.GAUNTLET_AXE
	)),

	GOD_STAFF(ImmutableList.of(
		ItemID.ZAMORAK_STAFF,
		ItemID.SOTD,
		ItemID.BR_SOTD,
		ItemID.TOXIC_SOTD_CHARGED,
		ItemID.TOXIC_SOTD,
		ItemID.GUTHIX_STAFF,
		ItemID.PEST_VOID_KNIGHT_MACE,
		ItemID.PEST_VOID_KNIGHT_MACE_BROKEN,
		ItemID.PEST_VOID_KNIGHT_MACE_TROUVER,
		ItemID.STAFF_OF_BALANCE,
		ItemID.SARADOMIN_STAFF,
		ItemID.STAFF_OF_LIGHT
	)),

	SNAIL_SHELLS(ImmutableList.of(
		ItemID.SHELLROUND_ORANGE,
		ItemID.SHELLROUND_BLUE,
		ItemID.SHELLROUND_SWAMP,
		ItemID.SHELLPOINT_BLUE,
		ItemID.SHELLPOINT_SWAMP,
		ItemID.SHELLROUND_RED_BLACK,
		ItemID.SHELLPOINT_RED_BLACK,
		ItemID.SHELLROUND_YELLOW,
		ItemID.SHELLPOINT_YELLOW
	)),

	TANNABLE_HIDE(ImmutableList.of(
		ItemID.DRAGONHIDE_BLACK,
		ItemID.DRAGONHIDE_RED,
		ItemID.DRAGONHIDE_BLUE,
		ItemID.DRAGONHIDE_GREEN,
		ItemID.TEMPLETREK_SWAMP_SNAKE_HIDE,
		ItemID.VILLAGE_SNAKE_HIDE,
		ItemID.COW_HIDE
	)),

	BONEMEAL(ImmutableList.of(
		ItemID.POT_BONEMEAL,
		ItemID.POT_BONEMEAL_BAT,
		ItemID.POT_BONEMEAL_BURNT,
		ItemID.POT_BONEMEAL_BIG,
		ItemID.POT_BONEMEAL_BABYDRAGON,
		ItemID.POT_BONEMEAL_BEARDED_GORILLA_MONKEY,
		ItemID.POT_BONEMEAL_BURNT_JOGRE,
		ItemID.POT_BONEMEAL_DRAGON,
		ItemID.POT_BONEMEAL_DRAKE,
		ItemID.POT_BONEMEAL_NORMAL_GORILLA_MONKEY,
		ItemID.POT_BONEMEAL_SMALL_NINJA_MONKEY,
		ItemID.POT_BONEMEAL_SKELETON,
		ItemID.POT_BONEMEAL_NORMAL_MONKEY,
		ItemID.POT_BONEMEAL_ANCESTRAL_FAYG,
		ItemID.POT_BONEMEAL_DAGANNOTH,
		ItemID.POT_BONEMEAL_HYDRA,
		ItemID.POT_BONEMEAL_JOGRE,
		ItemID.POT_BONEMEAL_LARGE_ZOMBIE_MONKEY,
		ItemID.POT_BONEMEAL_LAVADRAGON,
		ItemID.POT_BONEMEAL_MEDIUM_NINJA_MONKEY,
		ItemID.POT_BONEMEAL_ANCESTRAL_OURG,
		ItemID.POT_BONEMEAL_ANCESTRAL_RAURG,
		ItemID.POT_BONEMEAL_BEAST,
		ItemID.POT_BONEMEAL_DRAGON_SUPERIOR,
		ItemID.POT_BONEMEAL_WYRM,
		ItemID.POT_BONEMEAL_WOLF,
		ItemID.POT_BONEMEAL_ZOGRE,
		ItemID.POT_BONEMEAL_SMALL_ZOMBIE_MONKEY,
		ItemID.POT_BONEMEAL_WYVERN
	)),

	EAR_PROTECTION(new ImmutableList.Builder<Integer>()
		.addAll(SharedCollections.slayer_helmets)
		.add(ItemID.SLAYER_EARMUFFS)
		.build()),

	NOSE_PROTECTION(new ImmutableList.Builder<Integer>()
		.addAll(SharedCollections.slayer_helmets)
		.add(ItemID.SLAYER_NOSEPEG)
		.build()),

	ELITE_PYRE_LOGS(ImmutableList.of(
		ItemID.MAGIC_LOGS_PYRE,
		ItemID.REDWOOD_LOGS_PYRE
	)),

	SHADE_REMAINS(ImmutableList.of(
		ItemID.SHADE_BONES1,
		ItemID.SHADE_BONES2,
		ItemID.SHADE_BONES3,
		ItemID.SHADE_BONES4,
		ItemID.SHADE_BONES5,
		ItemID.SHADE_BONES6
	)),

	AHRIM_HOOD(ImmutableList.of(
		ItemID.BARROWS_AHRIM_HEAD,
		ItemID.BARROWS_AHRIM_HEAD_100,
		ItemID.BARROWS_AHRIM_HEAD_75,
		ItemID.BARROWS_AHRIM_HEAD_50,
		ItemID.BARROWS_AHRIM_HEAD_25
	)),

	AHRIM_ROBESKIRT(ImmutableList.of(
		ItemID.BARROWS_AHRIM_LEGS,
		ItemID.BARROWS_AHRIM_LEGS_100,
		ItemID.BARROWS_AHRIM_LEGS_75,
		ItemID.BARROWS_AHRIM_LEGS_50,
		ItemID.BARROWS_AHRIM_LEGS_25
	)),

	AHRIM_ROBETOP(ImmutableList.of(
		ItemID.BARROWS_AHRIM_BODY,
		ItemID.BARROWS_AHRIM_BODY_100,
		ItemID.BARROWS_AHRIM_BODY_75,
		ItemID.BARROWS_AHRIM_BODY_50,
		ItemID.BARROWS_AHRIM_BODY_25
	)),

	AHRIM_STAFF(ImmutableList.of(
		ItemID.BARROWS_AHRIM_WEAPON,
		ItemID.BARROWS_AHRIM_WEAPON_100,
		ItemID.BARROWS_AHRIM_WEAPON_75,
		ItemID.BARROWS_AHRIM_WEAPON_50,
		ItemID.BARROWS_AHRIM_WEAPON_25
	)),

	KARIL_CROSSBOW(ImmutableList.of(
		ItemID.BARROWS_KARIL_WEAPON,
		ItemID.BARROWS_KARIL_WEAPON_100,
		ItemID.BARROWS_KARIL_WEAPON_75,
		ItemID.BARROWS_KARIL_WEAPON_50,
		ItemID.BARROWS_KARIL_WEAPON_25
	)),

	KARIL_COIF(ImmutableList.of(
		ItemID.BARROWS_KARIL_HEAD,
		ItemID.BARROWS_KARIL_HEAD_100,
		ItemID.BARROWS_KARIL_HEAD_75,
		ItemID.BARROWS_KARIL_HEAD_50,
		ItemID.BARROWS_KARIL_HEAD_25
	)),

	KARIL_SKIRT(ImmutableList.of(
		ItemID.BARROWS_KARIL_LEGS,
		ItemID.BARROWS_KARIL_LEGS_100,
		ItemID.BARROWS_KARIL_LEGS_75,
		ItemID.BARROWS_KARIL_LEGS_50,
		ItemID.BARROWS_KARIL_LEGS_25
	)),

	KARIL_TOP(ImmutableList.of(
		ItemID.BARROWS_KARIL_BODY,
		ItemID.BARROWS_KARIL_BODY_100,
		ItemID.BARROWS_KARIL_BODY_75,
		ItemID.BARROWS_KARIL_BODY_50,
		ItemID.BARROWS_KARIL_BODY_25
	)),

	DHAROK_AXE(ImmutableList.of(
		ItemID.BARROWS_DHAROK_WEAPON,
		ItemID.BARROWS_DHAROK_WEAPON_100,
		ItemID.BARROWS_DHAROK_WEAPON_75,
		ItemID.BARROWS_DHAROK_WEAPON_50,
		ItemID.BARROWS_DHAROK_WEAPON_25
	)),

	DHAROK_HELM(ImmutableList.of(
		ItemID.BARROWS_DHAROK_HEAD,
		ItemID.BARROWS_DHAROK_HEAD_100,
		ItemID.BARROWS_DHAROK_HEAD_75,
		ItemID.BARROWS_DHAROK_HEAD_50,
		ItemID.BARROWS_DHAROK_HEAD_25
	)),

	DHAROK_BODY(ImmutableList.of(
		ItemID.BARROWS_DHAROK_BODY,
		ItemID.BARROWS_DHAROK_BODY_100,
		ItemID.BARROWS_DHAROK_BODY_75,
		ItemID.BARROWS_DHAROK_BODY_50,
		ItemID.BARROWS_DHAROK_BODY_25
	)),

	DHAROK_LEGS(ImmutableList.of(
		ItemID.BARROWS_DHAROK_LEGS,
		ItemID.BARROWS_DHAROK_LEGS_100,
		ItemID.BARROWS_DHAROK_LEGS_75,
		ItemID.BARROWS_DHAROK_LEGS_50,
		ItemID.BARROWS_DHAROK_LEGS_25
	)),

	GUTHAN_WARSPEAR(ImmutableList.of(
		ItemID.BARROWS_GUTHAN_WEAPON,
		ItemID.BARROWS_GUTHAN_WEAPON_100,
		ItemID.BARROWS_GUTHAN_WEAPON_75,
		ItemID.BARROWS_GUTHAN_WEAPON_50,
		ItemID.BARROWS_GUTHAN_WEAPON_25
	)),

	GUTHAN_HELM(ImmutableList.of(
		ItemID.BARROWS_GUTHAN_HEAD,
		ItemID.BARROWS_GUTHAN_HEAD_100,
		ItemID.BARROWS_GUTHAN_HEAD_75,
		ItemID.BARROWS_GUTHAN_HEAD_50,
		ItemID.BARROWS_GUTHAN_HEAD_25
	)),

	GUTHAN_BODY(ImmutableList.of(
		ItemID.BARROWS_GUTHAN_BODY,
		ItemID.BARROWS_GUTHAN_BODY_100,
		ItemID.BARROWS_GUTHAN_BODY_75,
		ItemID.BARROWS_GUTHAN_BODY_50,
		ItemID.BARROWS_GUTHAN_BODY_25
	)),

	GUTHAN_SKIRT(ImmutableList.of(
		ItemID.BARROWS_GUTHAN_LEGS,
		ItemID.BARROWS_GUTHAN_LEGS_100,
		ItemID.BARROWS_GUTHAN_LEGS_75,
		ItemID.BARROWS_GUTHAN_LEGS_50,
		ItemID.BARROWS_GUTHAN_LEGS_25
	)),

	TORAG_HAMMERS(ImmutableList.of(
		ItemID.BARROWS_TORAG_WEAPON,
		ItemID.BARROWS_TORAG_WEAPON_100,
		ItemID.BARROWS_TORAG_WEAPON_75,
		ItemID.BARROWS_TORAG_WEAPON_50,
		ItemID.BARROWS_TORAG_WEAPON_25
	)),

	TORAG_HELM(ImmutableList.of(
		ItemID.BARROWS_TORAG_HEAD,
		ItemID.BARROWS_TORAG_HEAD_100,
		ItemID.BARROWS_TORAG_HEAD_75,
		ItemID.BARROWS_TORAG_HEAD_50,
		ItemID.BARROWS_TORAG_HEAD_25
	)),

	TORAG_BODY(ImmutableList.of(
		ItemID.BARROWS_TORAG_BODY,
		ItemID.BARROWS_TORAG_BODY_100,
		ItemID.BARROWS_TORAG_BODY_75,
		ItemID.BARROWS_TORAG_BODY_50,
		ItemID.BARROWS_TORAG_BODY_25
	)),

	TORAG_LEGS(ImmutableList.of(
		ItemID.BARROWS_TORAG_LEGS,
		ItemID.BARROWS_TORAG_LEGS_100,
		ItemID.BARROWS_TORAG_LEGS_75,
		ItemID.BARROWS_TORAG_LEGS_50,
		ItemID.BARROWS_TORAG_LEGS_25
	)),

	VERAC_FLAIL(ImmutableList.of(
		ItemID.BARROWS_VERAC_WEAPON,
		ItemID.BARROWS_VERAC_WEAPON_100,
		ItemID.BARROWS_VERAC_WEAPON_75,
		ItemID.BARROWS_VERAC_WEAPON_50,
		ItemID.BARROWS_VERAC_WEAPON_25
	)),

	VERAC_BRASSARD(ImmutableList.of(
		ItemID.BARROWS_VERAC_BODY,
		ItemID.BARROWS_VERAC_BODY_100,
		ItemID.BARROWS_VERAC_BODY_75,
		ItemID.BARROWS_VERAC_BODY_50,
		ItemID.BARROWS_VERAC_BODY_25
	)),

	VERAC_HELM(ImmutableList.of(
		ItemID.BARROWS_VERAC_HEAD,
		ItemID.BARROWS_VERAC_HEAD_100,
		ItemID.BARROWS_VERAC_HEAD_75,
		ItemID.BARROWS_VERAC_HEAD_50,
		ItemID.BARROWS_VERAC_HEAD_25
	)),

	VERAC_SKIRT(ImmutableList.of(
		ItemID.BARROWS_VERAC_LEGS,
		ItemID.BARROWS_VERAC_LEGS_100,
		ItemID.BARROWS_VERAC_LEGS_75,
		ItemID.BARROWS_VERAC_LEGS_50,
		ItemID.BARROWS_VERAC_LEGS_25
	)),

	ARCEUUS_BOOKS(ImmutableList.of(
		ItemID.ARCEUUS_LIBRARY_CENSUSRADA,
		ItemID.ARCEUUS_LIBRARY_DIARYRICKTOR7,
		ItemID.ARCEUUS_LIBRARY_EATHRAMRADA,
		ItemID.ARCEUUS_LIBRARY_KILLINGKING,
		ItemID.ARCEUUS_LIBRARY_HOSIDIUSLETTER,
		ItemID.ARCEUUS_LIBRARY_WINTERTODTPARABLE,
		ItemID.ARCEUUS_LIBRARY_TWILLACCORD,
		ItemID.ARCEUUS_LIBRARY_BYRNESPEECH,
		ItemID.ARCEUUS_LIBRARY_IDEOLOGYDARKNESS,
		ItemID.ARCEUUS_LIBRARY_RADAJOURNEY,
		ItemID.ARCEUUS_LIBRARY_TRANSVERGENCETHEORY,
		ItemID.ARCEUUS_LIBRARY_TRISTESSATRAGEDY,
		ItemID.ARCEUUS_LIBRARY_TREACHERYROYALTY,
		ItemID.ARCEUUS_LIBRARY_TELEPORTUNLOCK
	)),

	WARM_CLOTHING(ImmutableList.of(
		ItemID.SANTA_MASK,
		ItemID.SANTA_JACKET,
		ItemID.SANTA_PANTS,
		ItemID.SANTA_GLOVES,
		ItemID.SANTA_BOOTS,
		ItemID.ANTISANTA_MASK,
		ItemID.ANTISANTA_JACKET,
		ItemID.ANTISANTA_PANTS,
		ItemID.ANTISANTA_GLOVES,
		ItemID.ANTISANTA_BOOTS,
		ItemID.EASTER16_ONSIE_TOP,
		ItemID.EASTER16_ONSIE_BOTTOM,
		ItemID.EASTER16_ONSIE_GLOVES,
		ItemID.BUNNYFEET,
		ItemID.CLUE_HUNTER_GARB,
		ItemID.CLUE_HUNTER_TROUSERS,
		ItemID.CLUE_HUNTER_GLOVES,
		ItemID.CLUE_HUNTER_BOOTS,
		ItemID.CLUE_HUNTER_CLOAK,
		ItemID.HUNTING_CAMOFLAUGE_ROBE_POLAR,
		ItemID.HUNTING_TROUSERS_POLAR,
		ItemID.HUNTING_CAMOFLAUGE_ROBE_WOOD,
		ItemID.HUNTING_TROUSERS_WOOD,
		ItemID.HUNTING_CAMOFLAUGE_ROBE_JUNGLE,
		ItemID.HUNTING_TROUSERS_JUNGLE,
		ItemID.HUNTING_CAMOFLAUGE_ROBE_DESERT,
		ItemID.HUNTING_TROUSERS_DESERT,
		ItemID.HUNTING_HAT_JAGUAR,
		ItemID.HUNTING_TORSO_JAGUAR,
		ItemID.HUNTING_TROUSERS_JAGUAR,
		ItemID.HUNTING_HAT_LEOPARD,
		ItemID.HUNTING_TORSO_LEOPARD,
		ItemID.HUNTING_TROUSERS_LEOPARD,
		ItemID.HUNTING_HAT_TIGER,
		ItemID.HUNTING_TORSO_TIGER,
		ItemID.HUNTING_TROUSERS_TIGER,
		ItemID.ZEP_BOMBER_CAP,
		ItemID.ZEP_BOMBER_JACKET,
		ItemID.YAK_HIDE_ARMOUR_BODY,
		ItemID.YAK_HIDE_ARMOUR_GREAVES,
		ItemID.PYROMANCER_HOOD,
		ItemID.PYROMANCER_TOP,
		ItemID.PYROMANCER_BOTTOM,
		ItemID.PYROMANCER_BOOTS,
		ItemID.EASTER07_CHICKEN_HEAD,
		ItemID.EASTER07_CHICKEN_WINGS,
		ItemID.EASTER07_CHICKEN_LEGS,
		ItemID.EASTER07_CHICKEN_FEET,
		ItemID.EVIL_CHICKEN_HEAD,
		ItemID.EVIL_CHICKEN_WINGS,
		ItemID.EVIL_CHICKEN_LEGS,
		ItemID.EVIL_CHICKEN_FEET,
		ItemID.SANTA_HAT,
		ItemID.BLACK_SANTA_HAT,
		ItemID.MDAUGHTER_BEAR_HELMET,
		ItemID.TIARA_FIRE,
		ItemID.RAMBLE_LUMBERJACK_HAT,
		ItemID.SKILLCAPE_FIREMAKING_HOOD,
		ItemID.SKILLCAPE_MAX_HOOD_FIRECAPE,
		ItemID.SKILLCAPE_MAX_HOOD_INFERNALCAPE,
		ItemID.WIN05_SCARF2,
		ItemID.WIN05_SCARF3,
		ItemID.WIN05_SCARF4,
		ItemID.WIN05_SCARF1,
		ItemID.ALUFT_GNOME_SCARF,
		ItemID.PRIDE17_SCARF,
		ItemID.HUNTING_SILENT_GLOVES,
		ItemID.VIKINGGLOVES,
		ItemID.PYROMANCER_GLOVES,
		ItemID.SKILLCAPE_FIREMAKING,
		ItemID.SKILLCAPE_MAX,
		ItemID.TZHAAR_CAPE_FIRE,
		ItemID.SKILLCAPE_MAX_FIRECAPE,
		ItemID.INFERNAL_CAPE,
		ItemID.SKILLCAPE_MAX_INFERNALCAPE_DUMMY,
		ItemID.TZHAAR_CAPE_OBSIDIAN,
		ItemID.STAFF_OF_FIRE,
		ItemID.FIRE_BATTLESTAFF,
		ItemID.LAVA_BATTLESTAFF,
		ItemID.STEAM_BATTLESTAFF,
		ItemID.SMOKE_BATTLESTAFF,
		ItemID.MYSTIC_FIRE_STAFF,
		ItemID.MYSTIC_LAVA_STAFF,
		ItemID.MYSTIC_STEAM_BATTLESTAFF,
		ItemID.MYSTIC_SMOKE_BATTLESTAFF,
		ItemID.INFERNAL_AXE,
		ItemID.INFERNAL_AXE_EMPTY,
		ItemID.TRAILBLAZER_AXE_EMPTY,
		ItemID.TRAILBLAZER_AXE,
		ItemID.INFERNAL_PICKAXE,
		ItemID.ABYSSAL_WHIP_LAVA,
		ItemID.ALE_GODS,
		ItemID.WINT_TORCH,
		ItemID.TOME_OF_FIRE,
		ItemID.TOME_OF_FIRE_UNCHARGED,
		ItemID.SLAYER_BUGLAN_ON,
		ItemID.HW21_UGLY_JUMPER02,
		ItemID.HW21_UGLY_JUMPER01
	)),

	STONE_BOOTS(ImmutableList.of(
		ItemID.BOOTS_OF_STONE,
		ItemID.BOOTS_OF_BRIMSTONE,
		ItemID.GRANITE_BOOTS
	)),

	FISHING_ROD(ImmutableList.of(
		ItemID.FISHINGROD_PEARL,
		ItemID.FISHING_ROD
	)),

	OGRE_BRUTAL_ARROWS(ImmutableList.of(
		ItemID.ZOGRE_BRUTAL_RUNE,
		ItemID.ZOGRE_BRUTAL_ADAMANT,
		ItemID.ZOGRE_BRUTAL_MITHRIL,
		ItemID.ZOGRE_BRUTAL_BLACK,
		ItemID.ZOGRE_BRUTAL_STEEL,
		ItemID.ZOGRE_BRUTAL_IRON,
		ItemID.ZOGRE_BRUTAL_BRONZE,
		ItemID.OGRE_ARROW
	)),

	OGRE_BELLOWS(ImmutableList.of(
		ItemID.FILLED_OGRE_BELLOW3,
		ItemID.FILLED_OGRE_BELLOW2,
		ItemID.FILLED_OGRE_BELLOW1,
		ItemID.EMPTY_OGRE_BELLOWS
	)),

	OGRE_BOW(ImmutableList.of(
		ItemID.OGRE_BOW,
		ItemID.ZOGRE_BOW
	)),

	TELEPORT_CRYSTAL(ImmutableList.of(
		ItemID.MOURNING_TELEPORT_CRYSTAL_5,
		ItemID.MOURNING_TELEPORT_CRYSTAL_4,
		ItemID.MOURNING_TELEPORT_CRYSTAL_3,
		ItemID.MOURNING_TELEPORT_CRYSTAL_2,
		ItemID.MOURNING_TELEPORT_CRYSTAL_1
	)),

	NINJA_GREEGREE(ImmutableList.of(
		ItemID.MM2_KRUK_GREEGREE,
		ItemID.MM_MONKEY_GREEGREE_FOR_SMALL_NINJA_MONKEY,
		ItemID.MM_MONKEY_GREEGREE_FOR_MEDIUM_NINJA_MONKEY
	)),

	CRYSTAL_BOW(ImmutableList.of(
		ItemID.CERT_ROVING_CRYSTAL_BOW_NEW,
		ItemID.PLACEHOLDER_ROVING_CRYSTAL_BOW_NEW,
		ItemID.NZONE_CRYSTAL_BOW_NEW,
		ItemID.PLACEHOLDER_NZONE_CRYSTAL_BOW_NEW,
		ItemID.CRYSTAL_BOW,
		ItemID.CRYSTAL_BOW_2500,
		ItemID.ROVING_CRYSTAL_BOW_100,
		ItemID.NZONE_CRYSTAL_BOW_100,
		ItemID.ROVING_CRYSTAL_BOW_200,
		ItemID.NZONE_CRYSTAL_BOW_200,
		ItemID.ROVING_CRYSTAL_BOW_300,
		ItemID.NZONE_CRYSTAL_BOW_300,
		ItemID.ROVING_CRYSTAL_BOW_400,
		ItemID.NZONE_CRYSTAL_BOW_400,
		ItemID.ROVING_CRYSTAL_BOW_500,
		ItemID.NZONE_CRYSTAL_BOW_500,
		ItemID.ROVING_CRYSTAL_BOW_600,
		ItemID.NZONE_CRYSTAL_BOW_600,
		ItemID.ROVING_CRYSTAL_BOW_700,
		ItemID.NZONE_CRYSTAL_BOW_700,
		ItemID.ROVING_CRYSTAL_BOW_800,
		ItemID.NZONE_CRYSTAL_BOW_800,
		ItemID.ROVING_CRYSTAL_BOW_900,
		ItemID.ROVING_CRYSTAL_BOW_900,
		ItemID.ROVING_CRYSTAL_BOW_1000,
		ItemID.NZONE_CRYSTAL_BOW_1000
	)),

	MOUTH_PROTECTION(new ImmutableList.Builder<Integer>()
		.addAll(SharedCollections.slayer_helmets)
		.add(ItemID.SLAYER_FACEMASK)
		.build()),

	VOID_HELM(ImmutableList.of(
		ItemID.GAME_PEST_MAGE_HELM,
		ItemID.GAME_PEST_MELEE_HELM,
		ItemID.GAME_PEST_ARCHER_HELM
	)),

	VOID_TOP(ImmutableList.of(
		ItemID.ELITE_VOID_KNIGHT_TOP,
		ItemID.PEST_VOID_KNIGHT_TOP
	)),

	VOID_ROBE(ImmutableList.of(
		ItemID.ELITE_VOID_KNIGHT_ROBES,
		ItemID.PEST_VOID_KNIGHT_ROBES
	)),

	GUTHIX_BALANCE_UNF(ImmutableList.of(
		ItemID.BURGH_UNFINISHED_GUTHIX_BALANCE_4,
		ItemID.BURGH_UNFINISHED_GUTHIX_BALANCE_3,
		ItemID.BURGH_UNFINISHED_GUTHIX_BALANCE_2,
		ItemID.BURGH_UNFINISHED_GUTHIX_BALANCE_1
	)),

	EYE_HAT(ImmutableList.of(
		ItemID.HAT_OF_THE_EYE,
		ItemID.HAT_OF_THE_EYE_BLUE,
		ItemID.HAT_OF_THE_EYE_GREEN,
		ItemID.HAT_OF_THE_EYE_RED
	)),

	EYE_TOP(ImmutableList.of(
		ItemID.ROBE_TOP_OF_THE_EYE,
		ItemID.ROBE_TOP_OF_THE_EYE_BLUE,
		ItemID.ROBE_TOP_OF_THE_EYE_GREEN,
		ItemID.ROBE_TOP_OF_THE_EYE_RED
	)),

	EYE_BOTTOM(ImmutableList.of(
		ItemID.ROBE_BOTTOM_OF_THE_EYE,
		ItemID.ROBE_BOTTOM_OF_THE_EYE_BLUE,
		ItemID.ROBE_BOTTOM_OF_THE_EYE_GREEN,
		ItemID.ROBE_BOTTOM_OF_THE_EYE_RED
	)),

	CLIMBING_BOOTS(ImmutableList.of(
		ItemID.DEATH_CLIMBINGBOOTS,
		ItemID.CLIMBING_BOOTS_G
	)),

	ALLOTMENT_SEEDS(ImmutableList.of(
		ItemID.POTATO_SEED,
		ItemID.ONION_SEED,
		ItemID.CABBAGE_SEED,
		ItemID.TOMATO_SEED,
		ItemID.SWEETCORN_SEED,
		ItemID.WATERMELON_SEED,
		ItemID.SNAPE_GRASS_SEED
	)),

	HERB_SEEDS(ImmutableList.of(
		ItemID.GUAM_SEED,
		ItemID.MARRENTILL_SEED,
		ItemID.TARROMIN_SEED,
		ItemID.HARRALANDER_SEED,
		ItemID.RANARR_SEED,
		ItemID.TOADFLAX_SEED,
		ItemID.IRIT_SEED,
		ItemID.AVANTOE_SEED,
		ItemID.KWUARM_SEED,
		ItemID.SNAPDRAGON_SEED,
		ItemID.HUASCA_SEED,
		ItemID.CADANTINE_SEED,
		ItemID.LANTADYME_SEED,
		ItemID.DWARF_WEED_SEED,
		ItemID.TORSTOL_SEED
	)),

	FLOWER_SEEDS(ImmutableList.of(
		ItemID.MARIGOLD_SEED,
		ItemID.ROSEMARY_SEED,
		ItemID.NASTURTIUM_SEED,
		ItemID.WOAD_SEED,
		ItemID.LIMPWURT_SEED,
		ItemID.WHITE_LILY_SEED
	)),

	HOPS_SEEDS(ImmutableList.of(
		ItemID.BARLEY_SEED,
		ItemID.HAMMERSTONE_HOP_SEED,
		ItemID.ASGARNIAN_HOP_SEED,
		ItemID.JUTE_SEED,
		ItemID.YANILLIAN_HOP_SEED,
		ItemID.KRANDORIAN_HOP_SEED,
		ItemID.WILDBLOOD_HOP_SEED
	)),

	BUSH_SEEDS(ImmutableList.of(
		ItemID.REDBERRY_BUSH_SEED,
		ItemID.CADAVABERRY_BUSH_SEED,
		ItemID.DWELLBERRY_BUSH_SEED,
		ItemID.JANGERBERRY_BUSH_SEED,
		ItemID.WHITEBERRY_BUSH_SEED,
		ItemID.POISONIVY_BUSH_SEED
	)),

	TREE_SAPLINGS(ImmutableList.of(
		ItemID.PLANTPOT_OAK_SAPLING,
		ItemID.PLANTPOT_WILLOW_SAPLING,
		ItemID.PLANTPOT_MAPLE_SAPLING,
		ItemID.PLANTPOT_YEW_SAPLING,
		ItemID.PLANTPOT_MAGIC_TREE_SAPLING
	)),

	FRUIT_TREE_SAPLINGS(ImmutableList.of(
		ItemID.PLANTPOT_APPLE_SAPLING,
		ItemID.PLANTPOT_BANANA_SAPLING,
		ItemID.PLANTPOT_ORANGE_SAPLING,
		ItemID.PLANTPOT_CURRY_SAPLING,
		ItemID.PLANTPOT_PINEAPPLE_SAPLING,
		ItemID.PLANTPOT_PAPAYA_SAPLING,
		ItemID.PLANTPOT_PALM_SAPLING,
		ItemID.PLANTPOT_DRAGONFRUIT_SAPLING
	)),

	GHOMMALS_HILT(ImmutableList.of(
		ItemID.INFERNAL_DEFENDER_GHOMMAL_6_TROUVER,
		ItemID.INFERNAL_DEFENDER_GHOMMAL_6,
		ItemID.CA_OFFHAND_GRANDMASTER,
		ItemID.INFERNAL_DEFENDER_GHOMMAL_5_TROUVER,
		ItemID.INFERNAL_DEFENDER_GHOMMAL_5,
		ItemID.CA_OFFHAND_MASTER,
		ItemID.CA_OFFHAND_ELITE,
		ItemID.CA_OFFHAND_HARD,
		ItemID.CA_OFFHAND_MEDIUM,
		ItemID.CA_OFFHAND_EASY
	)),
	
	PROSPECTOR_HELMET(ImmutableList.of(
		ItemID.MOTHERLODE_REWARD_HAT,
		ItemID.FOSSIL_MOTHERLODE_REWARD_HAT,
		ItemID.MOTHERLODE_REWARD_HAT_GOLD
	));

	private final List<Integer> items;
	private final String wikiTerm;

	ItemCollections(String wikiTerm, List<Integer> items)
	{
		this.wikiTerm = wikiTerm;
		this.items = items;
	}

	ItemCollections(List<Integer> items)
	{
		this.wikiTerm = null;
		this.items = items;
	}

	public List<Integer> reverseOrder()
	{
		List<Integer> reversedArray = new ArrayList<>(getItems());
		Collections.reverse(reversedArray);
		return reversedArray;
	}
}
